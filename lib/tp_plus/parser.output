state 3 contains 2 shift/reduce conflicts
state 53 contains 1 shift/reduce conflicts
state 61 contains 1 shift/reduce conflicts
state 63 contains 1 reduce/reduce conflicts
state 77 contains 2 shift/reduce conflicts
state 102 contains 2 shift/reduce conflicts
state 105 contains 1 shift/reduce conflicts
state 134 contains 1 reduce/reduce conflicts
state 161 contains 1 reduce/reduce conflicts
state 183 contains 1 shift/reduce conflicts
state 187 contains 1 shift/reduce conflicts
state 206 contains 1 shift/reduce conflicts
state 292 contains 2 reduce/reduce conflicts
state 293 contains 2 reduce/reduce conflicts
state 294 contains 2 reduce/reduce conflicts
state 296 contains 2 reduce/reduce conflicts
state 305 contains 1 shift/reduce conflicts
state 312 contains 1 shift/reduce conflicts
state 332 contains 1 shift/reduce conflicts
state 351 contains 14 shift/reduce conflicts
state 381 contains 1 shift/reduce conflicts
state 461 contains 1 shift/reduce conflicts
state 462 contains 1 shift/reduce conflicts
state 509 contains 1 shift/reduce conflicts
state 510 contains 1 shift/reduce conflicts

rule 144 (case_allowed_statement) never reduced
rule 145 (case_allowed_statement) never reduced
useless nonterminal case_allowed_statement

-------- Grammar --------

rule 1 program: statements
rule 2 program: 
rule 3 statements: statement terminator
rule 4 statements: statements statement terminator
rule 5 block: NEWLINE statements
rule 6 optional_newline: NEWLINE
rule 7 optional_newline: 
rule 8 statement: comment
rule 9 statement: message
rule 10 statement: definition
rule 11 statement: namespace
rule 12 statement: motion_statement
rule 13 statement: position_assignment
rule 14 statement: label_definition
rule 15 statement: address
rule 16 statement: conditional
rule 17 statement: inline_conditional
rule 18 statement: conditional_block
rule 19 statement: forloop
rule 20 statement: while_loop
rule 21 statement: use_statement
rule 22 statement: set_skip_statement
rule 23 statement: wait_statement
rule 24 statement: case_statement
rule 25 statement: fanuc_eval
rule 26 statement: timer_method
rule 27 statement: position_data
rule 28 statement: raise
rule 29 statement: tp_header_definition
rule 30 statement: lpos_or_jpos
rule 31 statement: empty_stmt
rule 32 statement: warning
rule 33 statement: var_system
rule 34 statement: PAUSE
rule 35 statement: ABORT
rule 36 statement: return_statement
rule 37 statement: collguard_statement
rule 38 statement: function
rule 39 statement: tp_application_definition
rule 40 statement: using_statement
rule 41 statement: import_statement
rule 42 statement: compile_statement
rule 43 lpos_or_jpos: LPOS LPAREN var_or_indirect RPAREN
rule 44 lpos_or_jpos: JPOS LPAREN var_or_indirect RPAREN
rule 45 empty_stmt: NEWLINE
rule 46 tp_header_definition: TP_HEADER EQUAL tp_header_value
rule 47 tp_header_value: STRING
rule 48 tp_header_value: TRUE_FALSE
rule 49 tp_header_value: ON_OFF
rule 50 tp_tool_methods: LBRACE sn tp_tool_attributes sn RBRACE
rule 51 tp_tool_methods: LBRACE sn RBRACE
rule 52 tp_tool_attributes: tp_tool_attribute
rule 53 tp_tool_attributes: tp_tool_attributes COMMA sn tp_tool_attribute
rule 54 tp_tool_attribute: WORD COLON hash_value
rule 55 tp_application_definition: TP_APPLICATION_TYPE EQUAL sn tp_tool_methods
rule 56 raise: RAISE var_or_indirect
rule 57 timer_method: TIMER_METHOD var_or_indirect
rule 58 fanuc_eval: EVAL STRING
rule 59 wait_statement: WAIT_FOR LPAREN indirectable COMMA STRING RPAREN
rule 60 wait_statement: WAIT_UNTIL LPAREN expression RPAREN
rule 61 wait_statement: WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier
rule 62 wait_statement: WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier
rule 63 wait_modifier: timeout_modifier
rule 64 wait_modifier: after_modifier
rule 65 timeout_modifier: swallow_newlines TIMEOUT LPAREN label RPAREN
rule 66 after_modifier: swallow_newlines AFTER LPAREN indirectable COMMA STRING RPAREN
rule 67 label: LABEL COLON integer
rule 68 label: LABEL
rule 69 label: LABEL_SET LPAREN case_allowed_condition RPAREN
rule 70 label: LABEL_POP
rule 71 group_statement: GROUP LPAREN integer RPAREN
rule 72 use_statement: FANUC_USE indirectable
rule 73 use_statement: FANUC_USE LPAREN indirectable RPAREN
rule 74 use_statement: FANUC_USE LPAREN indirectable COMMA group_statement RPAREN
rule 75 collguard_statement: COLL_GUARD optional_arg
rule 76 set_skip_statement: SET_SKIP_CONDITION expression
rule 77 function_call: WORD
rule 78 function_call: namespaces WORD
rule 79 basic_program_call: function_call LPAREN args RPAREN
rule 80 program_call: basic_program_call
rule 81 program_call: RUN function_call LPAREN args RPAREN
rule 82 program_call: CALL var_or_indirect LPAREN args RPAREN
rule 83 args: arg
rule 84 args: args COMMA arg
rule 85 args: 
rule 86 arg: number
rule 87 arg: signed_number
rule 88 arg: var
rule 89 arg: string
rule 90 arg: address
rule 91 arg: expression
rule 92 program_vars: program_var
rule 93 program_vars: program_vars COMMA program_var
rule 94 program_vars: 
rule 95 program_var: WORD
rule 96 return_statement: RETURN LPAREN expression RPAREN
rule 97 return_statement: RETURN
rule 98 string: STRING
rule 99 io_method: IO_METHOD var_or_indirect
rule 100 io_method: IO_METHOD LPAREN var_or_indirect RPAREN
rule 101 io_method: IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING RPAREN
rule 102 var_or_indirect: var
rule 103 var_or_indirect: indirect_thing
rule 104 var_or_indirect: var_system
rule 105 jump: JUMP label
rule 106 jump: JUMP indirect_thing
rule 107 conditional: IF expression block elsif_conditions else_block END
rule 108 conditional: UNLESS expression block else_block END
rule 109 conditional_block: IF expression THEN block elsif_block else_block END
rule 110 elsif_conditions: elsif_condition
rule 111 elsif_conditions: elsif_conditions elsif_condition
rule 112 elsif_conditions: 
rule 113 elsif_condition: ELSIF expression block
rule 114 elsif_block: elsif_block_condition
rule 115 elsif_block: elsif_block elsif_block_condition
rule 116 elsif_block: 
rule 117 elsif_block_condition: ELSIF expression THEN block
rule 118 forloop: FOR int_or_var IN LPAREN int_or_var TO int_or_var RPAREN block END
rule 119 forloop: FOR int_or_var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END
rule 120 while_loop: WHILE expression block END
rule 121 int_or_var: integer
rule 122 int_or_var: var
rule 123 int_or_var: indirect_thing
rule 124 word_list: word_tuple
rule 125 word_list: word_list word_tuple
rule 126 word_tuple: COMMA WORD
rule 127 word_tuple: WORD
rule 128 using_statement: USING word_list
rule 129 compile_statement: COMPILE IMPORT word_list
rule 130 import_statement: IMPORT word_list
rule 131 namespace: NAMESPACE WORD block END
rule 132 function: INLINE FUNCTION WORD LPAREN program_vars RPAREN block END
rule 133 function: INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END
rule 134 function: FUNCTION WORD LPAREN program_vars RPAREN block END
rule 135 function: FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END
rule 136 case_statement: CASE var swallow_newlines case_conditions case_else END
rule 137 case_conditions: case_condition
rule 138 case_conditions: case_conditions case_condition
rule 139 case_condition: WHEN case_allowed_condition block
rule 140 case_allowed_condition: number
rule 141 case_allowed_condition: var
rule 142 case_else: ELSE block
rule 143 case_else: 
rule 144 case_allowed_statement: program_call
rule 145 case_allowed_statement: jump
rule 146 inline_conditional: inlineable
rule 147 inline_conditional: inlineable IF expression
rule 148 inline_conditional: inlineable UNLESS expression
rule 149 inlineable: jump
rule 150 inlineable: assignment
rule 151 inlineable: io_method
rule 152 inlineable: program_call
rule 153 else_block: ELSE block
rule 154 else_block: 
rule 155 motion_statement: MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
rule 156 motion_statement: MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
rule 157 motion_modifiers: motion_modifier
rule 158 motion_modifiers: motion_modifiers motion_modifier
rule 159 motion_arguements: valid_terminations
rule 160 motion_arguements: valid_terminations COMMA valid_terminations
rule 161 motion_modifier: DOT swallow_newlines AT LPAREN speed RPAREN
rule 162 motion_modifier: DOT swallow_newlines ACC LPAREN int_or_var RPAREN
rule 163 motion_modifier: DOT swallow_newlines CR LPAREN motion_arguements RPAREN
rule 164 motion_modifier: DOT swallow_newlines TERM LPAREN valid_terminations RPAREN
rule 165 motion_modifier: DOT swallow_newlines OFFSET LPAREN var_or_indirect RPAREN
rule 166 motion_modifier: DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA seg_actions RPAREN
rule 167 motion_modifier: DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA seg_actions RPAREN
rule 168 motion_modifier: DOT swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN
rule 169 motion_modifier: DOT swallow_newlines valid_motion_statements
rule 170 motion_modifier: DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN
rule 171 valid_motion_statements: COORD
rule 172 valid_motion_statements: MROT
rule 173 valid_motion_statements: PTH
rule 174 valid_motion_statements: INC
rule 175 valid_motion_statements: WJNT
rule 176 valid_motion_statements: BREAK
rule 177 valid_motion_statements: RTCP
rule 178 valid_motion_statements: FPLIN
rule 179 single_argument_motion_modifiers: CD
rule 180 single_argument_motion_modifiers: EV
rule 181 single_argument_motion_modifiers: INDEV
rule 182 single_argument_motion_modifiers: RT_LD
rule 183 single_argument_motion_modifiers: AP_LD
rule 184 single_argument_motion_modifiers: PSPD
rule 185 single_argument_motion_modifiers: CTV
rule 186 valid_terminations: integer
rule 187 valid_terminations: var
rule 188 valid_terminations: MINUS DIGIT
rule 189 optional_lpos_arg: COMMA var
rule 190 optional_lpos_arg: 
rule 191 indirectable: number
rule 192 indirectable: var
rule 193 indirectable: address
rule 194 optional_arg: number
rule 195 optional_arg: var
rule 196 optional_arg: 
rule 197 seg_actions: program_call
rule 198 seg_actions: io_method
rule 199 seg_actions: assignment
rule 200 time: var
rule 201 time: number
rule 202 distance: var
rule 203 distance: number
rule 204 speed: indirectable COMMA STRING
rule 205 speed: STRING
rule 206 label_definition: label
rule 207 memory_types: LOCALSTACK
rule 208 memory_types: SHAREDSTACK
rule 209 definition: memory_types ASSIGN definable
rule 210 definition: WORD ASSIGN definable
rule 211 assignment: var_or_indirect EQUAL expression
rule 212 assignment: var_or_indirect PLUS EQUAL expression
rule 213 assignment: var_or_indirect MINUS EQUAL expression
rule 214 assignment: var_or_indirect STAR EQUAL expression
rule 215 assignment: var_or_indirect SLASH EQUAL expression
rule 216 position_assignment: DEFAULTPOS var_method_modifiers ARROW array
rule 217 position_assignment: var_or_indirect ARROW array
rule 218 position_assignment: LPAREN assignable_range RPAREN var_method_modifiers ARROW array
rule 219 position_assignment: assignable_range EQUAL assignable_range
rule 220 position_assignment: assignable_range EQUAL LPAREN assignable_range RPAREN pose_range_modifiers
rule 221 assignable_range: var RANGE var
rule 222 assignable_range: var
rule 223 var: var_without_namespaces
rule 224 var: var_with_namespaces
rule 225 var_without_namespaces: WORD
rule 226 var_without_namespaces: WORD var_method_modifiers
rule 227 var_with_namespaces: namespaces var_without_namespaces
rule 228 var_method_modifiers: var_method_modifier
rule 229 var_method_modifiers: var_method_modifiers var_method_modifier
rule 230 pose_range_modifiers: pose_range_modifier
rule 231 pose_range_modifiers: pose_range_modifiers pose_range_modifier
rule 232 pose_range_modifier: DOT swallow_newlines POSEREVERSE
rule 233 coord_system: SPHERE
rule 234 coord_system: POLAR
rule 235 coord_system: ORIGIN
rule 236 var_method_modifier: DOT swallow_newlines WORD
rule 237 var_method_modifier: DOT swallow_newlines group_statement
rule 238 var_method_modifier: DOT swallow_newlines POSEATTR
rule 239 var_method_modifier: DOT swallow_newlines OFFSET
rule 240 var_method_modifier: DOT swallow_newlines coord_system
rule 241 var_method_modifier: DOT swallow_newlines FIX
rule 242 var_system: SYSTEM WORD var_system_modifers
rule 243 var_system: SYSTEM WORD LBRACK integer RBRACK var_system_modifers
rule 244 var_system: SYSTEM LBRACK WORD RBRACK WORD var_system_modifers
rule 245 var_system_modifers: var_system_modifer
rule 246 var_system_modifers: var_system_modifers var_system_modifer
rule 247 var_system_modifers: 
rule 248 var_system_modifer: DOT var_system
rule 249 namespaces: ns
rule 250 namespaces: namespaces ns
rule 251 ns: WORD COLON COLON
rule 252 expression: unary_expression
rule 253 expression: binary_expression
rule 254 unary_expression: factor
rule 255 unary_expression: address
rule 256 unary_expression: BANG factor
rule 257 unary_expression: basic_program_call
rule 258 binary_expression: expression operator expression
rule 259 operator: EEQUAL
rule 260 operator: NOTEQUAL
rule 261 operator: LT
rule 262 operator: GT
rule 263 operator: GTE
rule 264 operator: LTE
rule 265 operator: PLUS
rule 266 operator: MINUS
rule 267 operator: OR
rule 268 operator: STAR
rule 269 operator: SLASH
rule 270 operator: DIV
rule 271 operator: MOD
rule 272 operator: AND
rule 273 factor: number
rule 274 factor: signed_number
rule 275 factor: operation
rule 276 factor: var
rule 277 factor: signed_var
rule 278 factor: var_system
rule 279 factor: indirect_thing
rule 280 factor: paren_expr
rule 281 factor: booleans
rule 282 booleans: TRUE_FALSE
rule 283 booleans: ON_OFF
rule 284 paren_expr: LPAREN expression RPAREN
rule 285 indirect_thing: INDIRECT LPAREN STRING COMMA indirectable RPAREN
rule 286 indirect_thing: INDIRECT LPAREN STRING COMMA indirectable COMMA indirectable RPAREN
rule 287 indirect_thing: INDIRECT LPAREN STRING COMMA indirectable RPAREN var_method_modifiers
rule 288 indirect_thing: INDIRECT LPAREN STRING COMMA indirectable COMMA indirectable RPAREN var_method_modifiers
rule 289 signed_number: sign DIGIT
rule 290 signed_number: sign REAL
rule 291 signed_var: sign var
rule 292 sign: MINUS
rule 293 number: integer
rule 294 number: REAL
rule 295 integer: DIGIT
rule 296 definable: reg
rule 297 definable: number
rule 298 definable: signed_number
rule 299 definable: string
rule 300 definable: framereg
rule 301 definable: booleans
rule 302 definable: localvars
rule 303 definable: sharedvars
rule 304 definable_range: DIGIT RANGE DIGIT
rule 305 definable_range: DIGIT
rule 306 reg_types: SREG
rule 307 reg_types: UALM
rule 308 reg_types: TIMER
rule 309 reg_types: ARG
rule 310 reg_types: VREG
rule 311 reg_types: POSITION
rule 312 reg_types: NUMREG
rule 313 reg_types: POSREG
rule 314 reg_types: INPUT
rule 315 reg_types: OUTPUT
rule 316 reg: reg_types LBRACK definable_range RBRACK
rule 317 frametype: TOOLREG
rule 318 frametype: FRAMEREG
rule 319 framereg: frametype LBRACK DIGIT RBRACK
rule 320 local_types: LOCALREG
rule 321 local_types: LOCALPOSE
rule 322 local_types: LOCALFLAG
rule 323 localvars: local_types LBRACK RBRACK
rule 324 shared_types: SHAREDREG
rule 325 shared_types: SHAREDPOSE
rule 326 shared_types: SHAREDFLAG
rule 327 sharedvars: shared_types LBRACK RBRACK
rule 328 operation: OPERATION LBRACK var_or_indirect RBRACK
rule 329 operation: OPERATION LBRACK var_or_indirect COMMA var_or_indirect RBRACK
rule 330 operation: OPERATION LBRACK signed_number RBRACK
rule 331 operation: OPERATION LBRACK number RBRACK
rule 332 address: ADDRESS var
rule 333 comment: COMMENT
rule 334 message: MESSAGE LPAREN STRING RPAREN
rule 335 warning: WARNING LPAREN STRING RPAREN
rule 336 terminator: NEWLINE
rule 337 terminator: comment optional_newline
rule 338 terminator: false
rule 339 terminator: 
rule 340 swallow_newlines: NEWLINE
rule 341 swallow_newlines: 
rule 342 position_data: POSITION_DATA sn hash sn END
rule 343 sn: swallow_newlines
rule 344 hash: LBRACE sn hash_attributes sn RBRACE
rule 345 hash: LBRACE sn RBRACE
rule 346 hash_attributes: hash_attribute
rule 347 hash_attributes: hash_attributes COMMA sn hash_attribute
rule 348 hash_attribute: STRING COLON hash_value
rule 349 hash_value: STRING
rule 350 hash_value: WORD
rule 351 hash_value: hash
rule 352 hash_value: array
rule 353 hash_value: optional_sign DIGIT
rule 354 hash_value: optional_sign REAL
rule 355 hash_value: TRUE_FALSE
rule 356 optional_sign: sign
rule 357 optional_sign: 
rule 358 array: LBRACK sn array_values sn RBRACK
rule 359 array_values: array_value
rule 360 array_values: array_values COMMA sn array_value
rule 361 array_value: hash_value

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (144)
    on right: 
    on left : 
  program (145)
    on right: 
    on left : 1 2
  statements (146)
    on right: 1 4 5
    on left : 3 4
  statement (147)
    on right: 3 4
    on left : 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
  terminator (148)
    on right: 3 4
    on left : 336 337 338 339
  block (149)
    on right: 107 108 109 113 117 118 119 120 131 132 133 134 135 139 142 153
    on left : 5
  optional_newline (150)
    on right: 337
    on left : 6 7
  comment (151)
    on right: 8 337
    on left : 333
  message (152)
    on right: 9
    on left : 334
  definition (153)
    on right: 10
    on left : 209 210
  namespace (154)
    on right: 11
    on left : 131
  motion_statement (155)
    on right: 12
    on left : 155 156
  position_assignment (156)
    on right: 13
    on left : 216 217 218 219 220
  label_definition (157)
    on right: 14
    on left : 206
  address (158)
    on right: 15 90 193 255
    on left : 332
  conditional (159)
    on right: 16
    on left : 107 108
  inline_conditional (160)
    on right: 17
    on left : 146 147 148
  conditional_block (161)
    on right: 18
    on left : 109
  forloop (162)
    on right: 19
    on left : 118 119
  while_loop (163)
    on right: 20
    on left : 120
  use_statement (164)
    on right: 21
    on left : 72 73 74
  set_skip_statement (165)
    on right: 22
    on left : 76
  wait_statement (166)
    on right: 23
    on left : 59 60 61 62
  case_statement (167)
    on right: 24
    on left : 136
  fanuc_eval (168)
    on right: 25
    on left : 58
  timer_method (169)
    on right: 26
    on left : 57
  position_data (170)
    on right: 27
    on left : 342
  raise (171)
    on right: 28
    on left : 56
  tp_header_definition (172)
    on right: 29
    on left : 46
  lpos_or_jpos (173)
    on right: 30
    on left : 43 44
  empty_stmt (174)
    on right: 31
    on left : 45
  warning (175)
    on right: 32
    on left : 335
  var_system (176)
    on right: 33 104 248 278
    on left : 242 243 244
  return_statement (177)
    on right: 36
    on left : 96 97
  collguard_statement (178)
    on right: 37
    on left : 75
  function (179)
    on right: 38
    on left : 132 133 134 135
  tp_application_definition (180)
    on right: 39
    on left : 55
  using_statement (181)
    on right: 40
    on left : 128
  import_statement (182)
    on right: 41
    on left : 130
  compile_statement (183)
    on right: 42
    on left : 129
  var_or_indirect (184)
    on right: 43 44 56 57 82 99 100 101 155 156 165 211 212 213 214 215 217 328 329
    on left : 102 103 104
  tp_header_value (185)
    on right: 46
    on left : 47 48 49
  tp_tool_methods (186)
    on right: 55
    on left : 50 51
  sn (187)
    on right: 50 51 53 55 342 344 345 347 358 360
    on left : 343
  tp_tool_attributes (188)
    on right: 50 53
    on left : 52 53
  tp_tool_attribute (189)
    on right: 52 53
    on left : 54
  hash_value (190)
    on right: 54 348 361
    on left : 349 350 351 352 353 354 355
  indirectable (191)
    on right: 59 66 72 73 74 204 285 286 287 288
    on left : 191 192 193
  expression (192)
    on right: 60 61 62 76 91 96 107 108 109 113 117 120 147 148 211 212 213 214 215 258 284
    on left : 252 253
  wait_modifier (193)
    on right: 61 62
    on left : 63 64
  timeout_modifier (194)
    on right: 63
    on left : 65
  after_modifier (195)
    on right: 64
    on left : 66
  swallow_newlines (196)
    on right: 65 66 136 155 156 161 162 163 164 165 166 167 168 169 170 232 236 237 238 239 240 241 343
    on left : 340 341
  label (197)
    on right: 65 105 168 206
    on left : 67 68 69 70
  integer (198)
    on right: 67 71 121 186 243 293
    on left : 295
  case_allowed_condition (199)
    on right: 69 139
    on left : 140 141
  group_statement (200)
    on right: 74 237
    on left : 71
  optional_arg (201)
    on right: 75
    on left : 194 195 196
  function_call (202)
    on right: 79 81
    on left : 77 78
  namespaces (203)
    on right: 78 227 250
    on left : 249 250
  basic_program_call (204)
    on right: 80 257
    on left : 79
  args (205)
    on right: 79 81 82 84
    on left : 83 84 85
  program_call (206)
    on right: 144 152 197
    on left : 80 81 82
  arg (207)
    on right: 83 84
    on left : 86 87 88 89 90 91
  number (208)
    on right: 86 101 140 191 194 201 203 273 297 331
    on left : 293 294
  signed_number (209)
    on right: 87 274 298 330
    on left : 289 290
  var (210)
    on right: 88 102 122 136 141 187 189 192 195 200 202 221 222 276 291 332
    on left : 223 224
  string (211)
    on right: 89 299
    on left : 98
  program_vars (212)
    on right: 93 132 133 134 135
    on left : 92 93 94
  program_var (213)
    on right: 92 93
    on left : 95
  io_method (214)
    on right: 151 198
    on left : 99 100 101
  indirect_thing (215)
    on right: 103 106 123 279
    on left : 285 286 287 288
  jump (216)
    on right: 145 149
    on left : 105 106
  elsif_conditions (217)
    on right: 107 111
    on left : 110 111 112
  else_block (218)
    on right: 107 108 109
    on left : 153 154
  elsif_block (219)
    on right: 109 115
    on left : 114 115 116
  elsif_condition (220)
    on right: 110 111
    on left : 113
  elsif_block_condition (221)
    on right: 114 115
    on left : 117
  int_or_var (222)
    on right: 118 119 162 170
    on left : 121 122 123
  word_list (223)
    on right: 125 128 129 130
    on left : 124 125
  word_tuple (224)
    on right: 124 125
    on left : 126 127
  case_conditions (225)
    on right: 136 138
    on left : 137 138
  case_else (226)
    on right: 136
    on left : 142 143
  case_condition (227)
    on right: 137 138
    on left : 139
  case_allowed_statement (228)
    on right: 
    on left : 144 145
  inlineable (229)
    on right: 146 147 148
    on left : 149 150 151 152
  assignment (230)
    on right: 150 199
    on left : 211 212 213 214 215
  motion_modifiers (231)
    on right: 155 156 158
    on left : 157 158
  motion_modifier (232)
    on right: 157 158
    on left : 161 162 163 164 165 166 167 168 169 170
  motion_arguements (233)
    on right: 163
    on left : 159 160
  valid_terminations (234)
    on right: 159 160 164
    on left : 186 187 188
  speed (235)
    on right: 161
    on left : 204 205
  time (236)
    on right: 166
    on left : 200 201
  seg_actions (237)
    on right: 166 167
    on left : 197 198 199
  distance (238)
    on right: 167
    on left : 202 203
  optional_lpos_arg (239)
    on right: 168
    on left : 189 190
  valid_motion_statements (240)
    on right: 169
    on left : 171 172 173 174 175 176 177 178
  single_argument_motion_modifiers (241)
    on right: 170
    on left : 179 180 181 182 183 184 185
  memory_types (242)
    on right: 209
    on left : 207 208
  definable (243)
    on right: 209 210
    on left : 296 297 298 299 300 301 302 303
  var_method_modifiers (244)
    on right: 216 218 226 229 287 288
    on left : 228 229
  array (245)
    on right: 216 217 218 352
    on left : 358
  assignable_range (246)
    on right: 218 219 220
    on left : 221 222
  pose_range_modifiers (247)
    on right: 220 231
    on left : 230 231
  var_without_namespaces (248)
    on right: 223 227
    on left : 225 226
  var_with_namespaces (249)
    on right: 224
    on left : 227
  var_method_modifier (250)
    on right: 228 229
    on left : 236 237 238 239 240 241
  pose_range_modifier (251)
    on right: 230 231
    on left : 232
  coord_system (252)
    on right: 240
    on left : 233 234 235
  var_system_modifers (253)
    on right: 242 243 244 246
    on left : 245 246 247
  var_system_modifer (254)
    on right: 245 246
    on left : 248
  ns (255)
    on right: 249 250
    on left : 251
  unary_expression (256)
    on right: 252
    on left : 254 255 256 257
  binary_expression (257)
    on right: 253
    on left : 258
  factor (258)
    on right: 254 256
    on left : 273 274 275 276 277 278 279 280 281
  operator (259)
    on right: 258
    on left : 259 260 261 262 263 264 265 266 267 268 269 270 271 272
  operation (260)
    on right: 275
    on left : 328 329 330 331
  signed_var (261)
    on right: 277
    on left : 291
  paren_expr (262)
    on right: 280
    on left : 284
  booleans (263)
    on right: 281 301
    on left : 282 283
  sign (264)
    on right: 289 290 291 356
    on left : 292
  reg (265)
    on right: 296
    on left : 316
  framereg (266)
    on right: 300
    on left : 319
  localvars (267)
    on right: 302
    on left : 323
  sharedvars (268)
    on right: 303
    on left : 327
  definable_range (269)
    on right: 316
    on left : 304 305
  reg_types (270)
    on right: 316
    on left : 306 307 308 309 310 311 312 313 314 315
  frametype (271)
    on right: 319
    on left : 317 318
  local_types (272)
    on right: 323
    on left : 320 321 322
  shared_types (273)
    on right: 327
    on left : 324 325 326
  hash (274)
    on right: 342 351
    on left : 344 345
  hash_attributes (275)
    on right: 344 347
    on left : 346 347
  hash_attribute (276)
    on right: 346 347
    on left : 348
  optional_sign (277)
    on right: 353 354
    on left : 356 357
  array_values (278)
    on right: 358 360
    on left : 359 360
  array_value (279)
    on right: 359 360
    on left : 361

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  ASSIGN (2) 209 210
  AT_SYM (3) 
  COMMENT (4) 333
  MESSAGE (5) 334
  WARNING (6) 335
  JUMP (7) 105 106
  IO_METHOD (8) 99 100 101
  INPUT (9) 314
  OUTPUT (10) 315
  NUMREG (11) 312
  POSREG (12) 313
  VREG (13) 310
  SREG (14) 306
  TIME_SEGMENT (15) 166
  DISTANCE_SEGMENT (16) 167
  ARG (17) 309
  UALM (18) 307
  TOOLREG (19) 317
  FRAMEREG (20) 318
  MOVE (21) 155 156
  DOT (22) 61 62 155 156 161 162 163 164 165 166 167 168 169 170 232 236 237 238 239 240 241 248
  TO (23) 118 155 156
  DOWNTO (24) 119
  MID (25) 156
  AT (26) 161
  ACC (27) 162
  TERM (28) 164
  OFFSET (29) 165 239
  SKIP (30) 168
  GROUP (31) 71
  COORD (32) 171
  MROT (33) 172
  PTH (34) 173
  WJNT (35) 175
  INC (36) 174
  BREAK (37) 176
  RTCP (38) 177
  FPLIN (39) 178
  AP_LD (40) 183
  RT_LD (41) 182
  CD (42) 179
  CR (43) 163
  INDEV (44) 181
  EV (45) 180
  PSPD (46) 184
  CTV (47) 185
  SEMICOLON (48) 
  NEWLINE (49) 5 6 45 336 340
  STRING (50) 47 58 59 66 98 101 204 205 285 286 287 288 334 335 348 349
  REAL (51) 290 294 354
  DIGIT (52) 188 289 295 304 305 319 353
  WORD (53) 54 77 78 95 126 127 131 132 133 134 135 210 225 226 236 242 243 244 251 350
  EQUAL (54) 46 55 211 212 213 214 215 219 220
  RANGE (55) 221 304
  EEQUAL (56) 259
  NOTEQUAL (57) 260
  GTE (58) 263
  LTE (59) 264
  LT (60) 261
  GT (61) 262
  BANG (62) 256
  PLUS (63) 212 265
  MINUS (64) 188 213 266 292
  STAR (65) 214 268
  SLASH (66) 215 269
  DIV (67) 270
  AND (68) 272
  OR (69) 267
  MOD (70) 271
  IF (71) 107 109 147
  THEN (72) 109 117
  ELSE (73) 142 153
  ELSIF (74) 113 117
  END (75) 107 108 109 118 119 120 131 132 133 134 135 136 342
  UNLESS (76) 108 148
  FOR (77) 118 119
  IN (78) 118 119
  WHILE (79) 120
  WAIT_FOR (80) 59
  WAIT_UNTIL (81) 60 61 62
  TIMEOUT (82) 65
  AFTER (83) 66
  FANUC_USE (84) 72 73 74
  COLL_GUARD (85) 75
  SET_SKIP_CONDITION (86) 76
  NAMESPACE (87) 131
  CASE (88) 136
  WHEN (89) 139
  INDIRECT (90) 285 286 287 288
  POSITION (91) 311
  EVAL (92) 58
  TIMER (93) 308
  TIMER_METHOD (94) 57
  RAISE (95) 56
  ABORT (96) 35
  RETURN (97) 96 97
  POSITION_DATA (98) 342
  TRUE_FALSE (99) 48 282 355
  ON_OFF (100) 49 283
  CALL (101) 82
  RUN (102) 81
  PAUSE (103) 34
  TP_HEADER (104) 46
  TP_APPLICATION_TYPE (105) 55
  LPAREN (106) 43 44 59 60 61 62 65 66 69 71 73 74 79 81 82 96 100 101 118 119 132 133 134 135 155 156 161 162 163 164 165 166 167 168 170 218 220 284 285 286 287 288 334 335
  RPAREN (107) 43 44 59 60 61 62 65 66 69 71 73 74 79 81 82 96 100 101 118 119 132 133 134 135 155 156 161 162 163 164 165 166 167 168 170 218 220 284 285 286 287 288 334 335
  COLON (108) 54 67 133 135 251 348
  COMMA (109) 53 59 66 74 84 93 101 126 160 166 167 189 204 285 286 287 288 329 347 360
  LBRACK (110) 243 244 316 319 323 327 328 329 330 331 358
  RBRACK (111) 243 244 316 319 323 327 328 329 330 331 358
  LBRACE (112) 50 51 344 345
  RBRACE (113) 50 51 344 345
  LABEL (114) 67 68
  LABEL_SET (115) 69
  LABEL_POP (116) 70
  SYSTEM (117) 242 243 244
  ADDRESS (118) 332
  LPOS (119) 43
  JPOS (120) 44
  false (121) 338
  FUNCTION (122) 132 133 134 135
  OPERATION (123) 328 329 330 331
  USING (124) 128
  IMPORT (125) 129 130
  COMPILE (126) 129
  INLINE (127) 132 133
  ARROW (128) 216 217 218
  DEFAULTPOS (129) 216
  POSEATTR (130) 238
  POSEREVERSE (131) 232
  SPHERE (132) 233
  POLAR (133) 234
  ORIGIN (134) 235
  FIX (135) 241
  LOCALSTACK (136) 207
  LOCALREG (137) 320
  LOCALPOSE (138) 321
  LOCALFLAG (139) 322
  SHAREDSTACK (140) 208
  SHAREDREG (141) 324
  SHAREDPOSE (142) 325
  SHAREDFLAG (143) 326

--------- State ---------

state 0


  COMMENT       shift, and go to state 97
  MESSAGE       shift, and go to state 98
  WARNING       shift, and go to state 99
  JUMP          shift, and go to state 65
  IO_METHOD     shift, and go to state 62
  MOVE          shift, and go to state 82
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 55
  IF            shift, and go to state 66
  UNLESS        shift, and go to state 67
  FOR           shift, and go to state 68
  WHILE         shift, and go to state 69
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 52
  COLL_GUARD    shift, and go to state 53
  SET_SKIP_CONDITION  shift, and go to state 54
  NAMESPACE     shift, and go to state 73
  CASE          shift, and go to state 76
  INDIRECT      shift, and go to state 95
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 61
  POSITION_DATA  shift, and go to state 100
  CALL          shift, and go to state 60
  RUN           shift, and go to state 59
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 89
  LABEL         shift, and go to state 49
  LABEL_SET     shift, and go to state 50
  LABEL_POP     shift, and go to state 51
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 75
  USING         shift, and go to state 70
  IMPORT        shift, and go to state 72
  COMPILE       shift, and go to state 71
  INLINE        shift, and go to state 74
  DEFAULTPOS    shift, and go to state 88
  LOCALSTACK    shift, and go to state 84
  SHAREDSTACK   shift, and go to state 85
  $default      reduce using rule 2 (program)

  program       go to state 1
  statements    go to state 2
  statement     go to state 3
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 56
  function_call  go to state 57
  basic_program_call  go to state 58
  var           go to state 63
  indirect_thing  go to state 64
  inlineable    go to state 77
  jump          go to state 78
  assignment    go to state 79
  io_method     go to state 80
  program_call  go to state 81
  label         go to state 83
  memory_types  go to state 86
  var_or_indirect  go to state 87
  assignable_range  go to state 90
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94

state 1


  $end          shift, and go to state 101


state 2

   1) program : statements _
   4) statements : statements _ statement terminator

  COMMENT       shift, and go to state 97
  MESSAGE       shift, and go to state 98
  WARNING       shift, and go to state 99
  JUMP          shift, and go to state 65
  IO_METHOD     shift, and go to state 62
  MOVE          shift, and go to state 82
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 55
  IF            shift, and go to state 66
  UNLESS        shift, and go to state 67
  FOR           shift, and go to state 68
  WHILE         shift, and go to state 69
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 52
  COLL_GUARD    shift, and go to state 53
  SET_SKIP_CONDITION  shift, and go to state 54
  NAMESPACE     shift, and go to state 73
  CASE          shift, and go to state 76
  INDIRECT      shift, and go to state 95
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 61
  POSITION_DATA  shift, and go to state 100
  CALL          shift, and go to state 60
  RUN           shift, and go to state 59
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 89
  LABEL         shift, and go to state 49
  LABEL_SET     shift, and go to state 50
  LABEL_POP     shift, and go to state 51
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 75
  USING         shift, and go to state 70
  IMPORT        shift, and go to state 72
  COMPILE       shift, and go to state 71
  INLINE        shift, and go to state 74
  DEFAULTPOS    shift, and go to state 88
  LOCALSTACK    shift, and go to state 84
  SHAREDSTACK   shift, and go to state 85
  $default      reduce using rule 1 (program)

  statement     go to state 102
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 56
  function_call  go to state 57
  basic_program_call  go to state 58
  var           go to state 63
  indirect_thing  go to state 64
  inlineable    go to state 77
  jump          go to state 78
  assignment    go to state 79
  io_method     go to state 80
  program_call  go to state 81
  label         go to state 83
  memory_types  go to state 86
  var_or_indirect  go to state 87
  assignable_range  go to state 90
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94

state 3

   3) statements : statement _ terminator

  COMMENT       shift, and go to state 97
  COMMENT       [reduce using rule 339 (terminator)]
  NEWLINE       shift, and go to state 104
  NEWLINE       [reduce using rule 339 (terminator)]
  false         shift, and go to state 106
  $default      reduce using rule 339 (terminator)

  terminator    go to state 103
  comment       go to state 105

state 4

   8) statement : comment _

  $default      reduce using rule 8 (statement)


state 5

   9) statement : message _

  $default      reduce using rule 9 (statement)


state 6

  10) statement : definition _

  $default      reduce using rule 10 (statement)


state 7

  11) statement : namespace _

  $default      reduce using rule 11 (statement)


state 8

  12) statement : motion_statement _

  $default      reduce using rule 12 (statement)


state 9

  13) statement : position_assignment _

  $default      reduce using rule 13 (statement)


state 10

  14) statement : label_definition _

  $default      reduce using rule 14 (statement)


state 11

  15) statement : address _

  $default      reduce using rule 15 (statement)


state 12

  16) statement : conditional _

  $default      reduce using rule 16 (statement)


state 13

  17) statement : inline_conditional _

  $default      reduce using rule 17 (statement)


state 14

  18) statement : conditional_block _

  $default      reduce using rule 18 (statement)


state 15

  19) statement : forloop _

  $default      reduce using rule 19 (statement)


state 16

  20) statement : while_loop _

  $default      reduce using rule 20 (statement)


state 17

  21) statement : use_statement _

  $default      reduce using rule 21 (statement)


state 18

  22) statement : set_skip_statement _

  $default      reduce using rule 22 (statement)


state 19

  23) statement : wait_statement _

  $default      reduce using rule 23 (statement)


state 20

  24) statement : case_statement _

  $default      reduce using rule 24 (statement)


state 21

  25) statement : fanuc_eval _

  $default      reduce using rule 25 (statement)


state 22

  26) statement : timer_method _

  $default      reduce using rule 26 (statement)


state 23

  27) statement : position_data _

  $default      reduce using rule 27 (statement)


state 24

  28) statement : raise _

  $default      reduce using rule 28 (statement)


state 25

  29) statement : tp_header_definition _

  $default      reduce using rule 29 (statement)


state 26

  30) statement : lpos_or_jpos _

  $default      reduce using rule 30 (statement)


state 27

  31) statement : empty_stmt _

  $default      reduce using rule 31 (statement)


state 28

  32) statement : warning _

  $default      reduce using rule 32 (statement)


state 29

  33) statement : var_system _
 104) var_or_indirect : var_system _

  EQUAL         reduce using rule 104 (var_or_indirect)
  PLUS          reduce using rule 104 (var_or_indirect)
  MINUS         reduce using rule 104 (var_or_indirect)
  STAR          reduce using rule 104 (var_or_indirect)
  SLASH         reduce using rule 104 (var_or_indirect)
  ARROW         reduce using rule 104 (var_or_indirect)
  $default      reduce using rule 33 (statement)


state 30

  34) statement : PAUSE _

  $default      reduce using rule 34 (statement)


state 31

  35) statement : ABORT _

  $default      reduce using rule 35 (statement)


state 32

  36) statement : return_statement _

  $default      reduce using rule 36 (statement)


state 33

  37) statement : collguard_statement _

  $default      reduce using rule 37 (statement)


state 34

  38) statement : function _

  $default      reduce using rule 38 (statement)


state 35

  39) statement : tp_application_definition _

  $default      reduce using rule 39 (statement)


state 36

  40) statement : using_statement _

  $default      reduce using rule 40 (statement)


state 37

  41) statement : import_statement _

  $default      reduce using rule 41 (statement)


state 38

  42) statement : compile_statement _

  $default      reduce using rule 42 (statement)


state 39

  43) lpos_or_jpos : LPOS _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 107


state 40

  44) lpos_or_jpos : JPOS _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 108


state 41

  45) empty_stmt : NEWLINE _

  $default      reduce using rule 45 (empty_stmt)


state 42

  46) tp_header_definition : TP_HEADER _ EQUAL tp_header_value

  EQUAL         shift, and go to state 109


state 43

  55) tp_application_definition : TP_APPLICATION_TYPE _ EQUAL sn tp_tool_methods

  EQUAL         shift, and go to state 110


state 44

  56) raise : RAISE _ var_or_indirect

  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95
  SYSTEM        shift, and go to state 93

  var_or_indirect  go to state 111
  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 45

  57) timer_method : TIMER_METHOD _ var_or_indirect

  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95
  SYSTEM        shift, and go to state 93

  var_or_indirect  go to state 116
  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 46

  58) fanuc_eval : EVAL _ STRING

  STRING        shift, and go to state 117


state 47

  59) wait_statement : WAIT_FOR _ LPAREN indirectable COMMA STRING RPAREN

  LPAREN        shift, and go to state 118


state 48

  60) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN
  61) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN DOT wait_modifier
  62) wait_statement : WAIT_UNTIL _ LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier

  LPAREN        shift, and go to state 119


state 49

  67) label : LABEL _ COLON integer
  68) label : LABEL _

  COLON         shift, and go to state 120
  $default      reduce using rule 68 (label)


state 50

  69) label : LABEL_SET _ LPAREN case_allowed_condition RPAREN

  LPAREN        shift, and go to state 121


state 51

  70) label : LABEL_POP _

  $default      reduce using rule 70 (label)


state 52

  72) use_statement : FANUC_USE _ indirectable
  73) use_statement : FANUC_USE _ LPAREN indirectable RPAREN
  74) use_statement : FANUC_USE _ LPAREN indirectable COMMA group_statement RPAREN

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 114
  LPAREN        shift, and go to state 123
  ADDRESS       shift, and go to state 96

  indirectable  go to state 122
  number        go to state 124
  var           go to state 125
  address       go to state 126
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  integer       go to state 127

state 53

  75) collguard_statement : COLL_GUARD _ optional_arg

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 114
  WORD          [reduce using rule 196 (optional_arg)]
  $default      reduce using rule 196 (optional_arg)

  optional_arg  go to state 130
  number        go to state 131
  var           go to state 132
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  integer       go to state 127

state 54

  76) set_skip_statement : SET_SKIP_CONDITION _ expression

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 134
  BANG          shift, and go to state 139
  MINUS         shift, and go to state 154
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 150
  ON_OFF        shift, and go to state 151
  LPAREN        shift, and go to state 152
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 155

  expression    go to state 133
  namespaces    go to state 56
  function_call  go to state 57
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 135
  binary_expression  go to state 136
  factor        go to state 137
  address       go to state 138
  basic_program_call  go to state 140
  number        go to state 141
  signed_number  go to state 142
  operation     go to state 143
  var           go to state 144
  signed_var    go to state 145
  var_system    go to state 146
  indirect_thing  go to state 147
  paren_expr    go to state 148
  booleans      go to state 149
  sign          go to state 153
  integer       go to state 127

state 55

  77) function_call : WORD _
 210) definition : WORD _ ASSIGN definable
 225) var_without_namespaces : WORD _
 226) var_without_namespaces : WORD _ var_method_modifiers
 251) ns : WORD _ COLON COLON

  ASSIGN        shift, and go to state 156
  DOT           shift, and go to state 159
  COLON         shift, and go to state 160
  LPAREN        reduce using rule 77 (function_call)
  $default      reduce using rule 225 (var_without_namespaces)

  var_method_modifiers  go to state 157
  var_method_modifier  go to state 158

state 56

  78) function_call : namespaces _ WORD
 227) var_with_namespaces : namespaces _ var_without_namespaces
 250) namespaces : namespaces _ ns

  WORD          shift, and go to state 161

  var_without_namespaces  go to state 162
  ns            go to state 163

state 57

  79) basic_program_call : function_call _ LPAREN args RPAREN

  LPAREN        shift, and go to state 164


state 58

  80) program_call : basic_program_call _

  $default      reduce using rule 80 (program_call)


state 59

  81) program_call : RUN _ function_call LPAREN args RPAREN

  WORD          shift, and go to state 165

  namespaces    go to state 166
  function_call  go to state 167
  ns            go to state 94

state 60

  82) program_call : CALL _ var_or_indirect LPAREN args RPAREN

  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95
  SYSTEM        shift, and go to state 93

  var_or_indirect  go to state 168
  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 61

  96) return_statement : RETURN _ LPAREN expression RPAREN
  97) return_statement : RETURN _

  LPAREN        shift, and go to state 169
  LPAREN        [reduce using rule 97 (return_statement)]
  $default      reduce using rule 97 (return_statement)


state 62

  99) io_method : IO_METHOD _ var_or_indirect
 100) io_method : IO_METHOD _ LPAREN var_or_indirect RPAREN
 101) io_method : IO_METHOD _ LPAREN var_or_indirect COMMA number COMMA STRING RPAREN

  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95
  LPAREN        shift, and go to state 171
  SYSTEM        shift, and go to state 93

  var_or_indirect  go to state 170
  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 63

 102) var_or_indirect : var _
 221) assignable_range : var _ RANGE var
 222) assignable_range : var _

  RANGE         shift, and go to state 172
  EQUAL         [reduce using rule 222 (assignable_range)]
  $default      reduce using rule 102 (var_or_indirect)


state 64

 103) var_or_indirect : indirect_thing _

  $default      reduce using rule 103 (var_or_indirect)


state 65

 105) jump : JUMP _ label
 106) jump : JUMP _ indirect_thing

  INDIRECT      shift, and go to state 95
  LABEL         shift, and go to state 49
  LABEL_SET     shift, and go to state 50
  LABEL_POP     shift, and go to state 51

  label         go to state 173
  indirect_thing  go to state 174

state 66

 107) conditional : IF _ expression block elsif_conditions else_block END
 109) conditional_block : IF _ expression THEN block elsif_block else_block END

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 134
  BANG          shift, and go to state 139
  MINUS         shift, and go to state 154
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 150
  ON_OFF        shift, and go to state 151
  LPAREN        shift, and go to state 152
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 155

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 175
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 135
  binary_expression  go to state 136
  factor        go to state 137
  address       go to state 138
  basic_program_call  go to state 140
  number        go to state 141
  signed_number  go to state 142
  operation     go to state 143
  var           go to state 144
  signed_var    go to state 145
  var_system    go to state 146
  indirect_thing  go to state 147
  paren_expr    go to state 148
  booleans      go to state 149
  sign          go to state 153
  integer       go to state 127

state 67

 108) conditional : UNLESS _ expression block else_block END

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 134
  BANG          shift, and go to state 139
  MINUS         shift, and go to state 154
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 150
  ON_OFF        shift, and go to state 151
  LPAREN        shift, and go to state 152
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 155

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 176
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 135
  binary_expression  go to state 136
  factor        go to state 137
  address       go to state 138
  basic_program_call  go to state 140
  number        go to state 141
  signed_number  go to state 142
  operation     go to state 143
  var           go to state 144
  signed_var    go to state 145
  var_system    go to state 146
  indirect_thing  go to state 147
  paren_expr    go to state 148
  booleans      go to state 149
  sign          go to state 153
  integer       go to state 127

state 68

 118) forloop : FOR _ int_or_var IN LPAREN int_or_var TO int_or_var RPAREN block END
 119) forloop : FOR _ int_or_var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95

  int_or_var    go to state 177
  integer       go to state 178
  var           go to state 179
  indirect_thing  go to state 180
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 69

 120) while_loop : WHILE _ expression block END

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 134
  BANG          shift, and go to state 139
  MINUS         shift, and go to state 154
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 150
  ON_OFF        shift, and go to state 151
  LPAREN        shift, and go to state 152
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 155

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 181
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 135
  binary_expression  go to state 136
  factor        go to state 137
  address       go to state 138
  basic_program_call  go to state 140
  number        go to state 141
  signed_number  go to state 142
  operation     go to state 143
  var           go to state 144
  signed_var    go to state 145
  var_system    go to state 146
  indirect_thing  go to state 147
  paren_expr    go to state 148
  booleans      go to state 149
  sign          go to state 153
  integer       go to state 127

state 70

 128) using_statement : USING _ word_list

  WORD          shift, and go to state 185
  COMMA         shift, and go to state 184

  word_tuple    go to state 182
  word_list     go to state 183

state 71

 129) compile_statement : COMPILE _ IMPORT word_list

  IMPORT        shift, and go to state 186


state 72

 130) import_statement : IMPORT _ word_list

  WORD          shift, and go to state 185
  COMMA         shift, and go to state 184

  word_tuple    go to state 182
  word_list     go to state 187

state 73

 131) namespace : NAMESPACE _ WORD block END

  WORD          shift, and go to state 188


state 74

 132) function : INLINE _ FUNCTION WORD LPAREN program_vars RPAREN block END
 133) function : INLINE _ FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END

  FUNCTION      shift, and go to state 189


state 75

 134) function : FUNCTION _ WORD LPAREN program_vars RPAREN block END
 135) function : FUNCTION _ WORD LPAREN program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 190


state 76

 136) case_statement : CASE _ var swallow_newlines case_conditions case_else END

  WORD          shift, and go to state 114

  var           go to state 191
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 77

 146) inline_conditional : inlineable _
 147) inline_conditional : inlineable _ IF expression
 148) inline_conditional : inlineable _ UNLESS expression

  IF            shift, and go to state 192
  IF            [reduce using rule 146 (inline_conditional)]
  UNLESS        shift, and go to state 193
  UNLESS        [reduce using rule 146 (inline_conditional)]
  $default      reduce using rule 146 (inline_conditional)


state 78

 149) inlineable : jump _

  $default      reduce using rule 149 (inlineable)


state 79

 150) inlineable : assignment _

  $default      reduce using rule 150 (inlineable)


state 80

 151) inlineable : io_method _

  $default      reduce using rule 151 (inlineable)


state 81

 152) inlineable : program_call _

  $default      reduce using rule 152 (inlineable)


state 82

 155) motion_statement : MOVE _ DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
 156) motion_statement : MOVE _ DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  DOT           shift, and go to state 194


state 83

 206) label_definition : label _

  $default      reduce using rule 206 (label_definition)


state 84

 207) memory_types : LOCALSTACK _

  $default      reduce using rule 207 (memory_types)


state 85

 208) memory_types : SHAREDSTACK _

  $default      reduce using rule 208 (memory_types)


state 86

 209) definition : memory_types _ ASSIGN definable

  ASSIGN        shift, and go to state 195


state 87

 211) assignment : var_or_indirect _ EQUAL expression
 212) assignment : var_or_indirect _ PLUS EQUAL expression
 213) assignment : var_or_indirect _ MINUS EQUAL expression
 214) assignment : var_or_indirect _ STAR EQUAL expression
 215) assignment : var_or_indirect _ SLASH EQUAL expression
 217) position_assignment : var_or_indirect _ ARROW array

  EQUAL         shift, and go to state 196
  PLUS          shift, and go to state 197
  MINUS         shift, and go to state 198
  STAR          shift, and go to state 199
  SLASH         shift, and go to state 200
  ARROW         shift, and go to state 201


state 88

 216) position_assignment : DEFAULTPOS _ var_method_modifiers ARROW array

  DOT           shift, and go to state 159

  var_method_modifiers  go to state 202
  var_method_modifier  go to state 158

state 89

 218) position_assignment : LPAREN _ assignable_range RPAREN var_method_modifiers ARROW array

  WORD          shift, and go to state 114

  assignable_range  go to state 203
  var           go to state 204
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 90

 219) position_assignment : assignable_range _ EQUAL assignable_range
 220) position_assignment : assignable_range _ EQUAL LPAREN assignable_range RPAREN pose_range_modifiers

  EQUAL         shift, and go to state 205


state 91

 223) var : var_without_namespaces _

  $default      reduce using rule 223 (var)


state 92

 224) var : var_with_namespaces _

  $default      reduce using rule 224 (var)


state 93

 242) var_system : SYSTEM _ WORD var_system_modifers
 243) var_system : SYSTEM _ WORD LBRACK integer RBRACK var_system_modifers
 244) var_system : SYSTEM _ LBRACK WORD RBRACK WORD var_system_modifers

  WORD          shift, and go to state 206
  LBRACK        shift, and go to state 207


state 94

 249) namespaces : ns _

  $default      reduce using rule 249 (namespaces)


state 95

 285) indirect_thing : INDIRECT _ LPAREN STRING COMMA indirectable RPAREN
 286) indirect_thing : INDIRECT _ LPAREN STRING COMMA indirectable COMMA indirectable RPAREN
 287) indirect_thing : INDIRECT _ LPAREN STRING COMMA indirectable RPAREN var_method_modifiers
 288) indirect_thing : INDIRECT _ LPAREN STRING COMMA indirectable COMMA indirectable RPAREN var_method_modifiers

  LPAREN        shift, and go to state 208


state 96

 332) address : ADDRESS _ var

  WORD          shift, and go to state 114

  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  var           go to state 209

state 97

 333) comment : COMMENT _

  $default      reduce using rule 333 (comment)


state 98

 334) message : MESSAGE _ LPAREN STRING RPAREN

  LPAREN        shift, and go to state 210


state 99

 335) warning : WARNING _ LPAREN STRING RPAREN

  LPAREN        shift, and go to state 211


state 100

 342) position_data : POSITION_DATA _ sn hash sn END

  NEWLINE       shift, and go to state 212
  $default      reduce using rule 341 (swallow_newlines)

  sn            go to state 213
  swallow_newlines  go to state 214

state 101


  $end          shift, and go to state 215


state 102

   4) statements : statements statement _ terminator

  COMMENT       shift, and go to state 97
  COMMENT       [reduce using rule 339 (terminator)]
  NEWLINE       shift, and go to state 104
  NEWLINE       [reduce using rule 339 (terminator)]
  false         shift, and go to state 106
  $default      reduce using rule 339 (terminator)

  terminator    go to state 216
  comment       go to state 105

state 103

   3) statements : statement terminator _

  $default      reduce using rule 3 (statements)


state 104

 336) terminator : NEWLINE _

  $default      reduce using rule 336 (terminator)


state 105

 337) terminator : comment _ optional_newline

  NEWLINE       shift, and go to state 217
  NEWLINE       [reduce using rule 7 (optional_newline)]
  $default      reduce using rule 7 (optional_newline)

  optional_newline  go to state 218

state 106

 338) terminator : false _

  $default      reduce using rule 338 (terminator)


state 107

  43) lpos_or_jpos : LPOS LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95
  SYSTEM        shift, and go to state 93

  var_or_indirect  go to state 219
  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 108

  44) lpos_or_jpos : JPOS LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95
  SYSTEM        shift, and go to state 93

  var_or_indirect  go to state 220
  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 109

  46) tp_header_definition : TP_HEADER EQUAL _ tp_header_value

  STRING        shift, and go to state 222
  TRUE_FALSE    shift, and go to state 223
  ON_OFF        shift, and go to state 224

  tp_header_value  go to state 221

state 110

  55) tp_application_definition : TP_APPLICATION_TYPE EQUAL _ sn tp_tool_methods

  NEWLINE       shift, and go to state 212
  $default      reduce using rule 341 (swallow_newlines)

  sn            go to state 225
  swallow_newlines  go to state 214

state 111

  56) raise : RAISE var_or_indirect _

  $default      reduce using rule 56 (raise)


state 112

 102) var_or_indirect : var _

  $default      reduce using rule 102 (var_or_indirect)


state 113

 104) var_or_indirect : var_system _

  $default      reduce using rule 104 (var_or_indirect)


state 114

 225) var_without_namespaces : WORD _
 226) var_without_namespaces : WORD _ var_method_modifiers
 251) ns : WORD _ COLON COLON

  DOT           shift, and go to state 159
  COLON         shift, and go to state 160
  $default      reduce using rule 225 (var_without_namespaces)

  var_method_modifiers  go to state 157
  var_method_modifier  go to state 158

state 115

 227) var_with_namespaces : namespaces _ var_without_namespaces
 250) namespaces : namespaces _ ns

  WORD          shift, and go to state 114

  var_without_namespaces  go to state 162
  ns            go to state 163

state 116

  57) timer_method : TIMER_METHOD var_or_indirect _

  $default      reduce using rule 57 (timer_method)


state 117

  58) fanuc_eval : EVAL STRING _

  $default      reduce using rule 58 (fanuc_eval)


state 118

  59) wait_statement : WAIT_FOR LPAREN _ indirectable COMMA STRING RPAREN

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 114
  ADDRESS       shift, and go to state 96

  indirectable  go to state 226
  number        go to state 124
  var           go to state 125
  address       go to state 126
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  integer       go to state 127

state 119

  60) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN
  61) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN DOT wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN _ expression RPAREN DOT wait_modifier DOT wait_modifier

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 134
  BANG          shift, and go to state 139
  MINUS         shift, and go to state 154
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 150
  ON_OFF        shift, and go to state 151
  LPAREN        shift, and go to state 152
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 155

  expression    go to state 227
  namespaces    go to state 56
  function_call  go to state 57
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 135
  binary_expression  go to state 136
  factor        go to state 137
  address       go to state 138
  basic_program_call  go to state 140
  number        go to state 141
  signed_number  go to state 142
  operation     go to state 143
  var           go to state 144
  signed_var    go to state 145
  var_system    go to state 146
  indirect_thing  go to state 147
  paren_expr    go to state 148
  booleans      go to state 149
  sign          go to state 153
  integer       go to state 127

state 120

  67) label : LABEL COLON _ integer

  DIGIT         shift, and go to state 129

  integer       go to state 228

state 121

  69) label : LABEL_SET LPAREN _ case_allowed_condition RPAREN

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 114

  case_allowed_condition  go to state 229
  number        go to state 230
  var           go to state 231
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  integer       go to state 127

state 122

  72) use_statement : FANUC_USE indirectable _

  $default      reduce using rule 72 (use_statement)


state 123

  73) use_statement : FANUC_USE LPAREN _ indirectable RPAREN
  74) use_statement : FANUC_USE LPAREN _ indirectable COMMA group_statement RPAREN

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 114
  ADDRESS       shift, and go to state 96

  indirectable  go to state 232
  number        go to state 124
  var           go to state 125
  address       go to state 126
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  integer       go to state 127

state 124

 191) indirectable : number _

  $default      reduce using rule 191 (indirectable)


state 125

 192) indirectable : var _

  $default      reduce using rule 192 (indirectable)


state 126

 193) indirectable : address _

  $default      reduce using rule 193 (indirectable)


state 127

 293) number : integer _

  $default      reduce using rule 293 (number)


state 128

 294) number : REAL _

  $default      reduce using rule 294 (number)


state 129

 295) integer : DIGIT _

  $default      reduce using rule 295 (integer)


state 130

  75) collguard_statement : COLL_GUARD optional_arg _

  $default      reduce using rule 75 (collguard_statement)


state 131

 194) optional_arg : number _

  $default      reduce using rule 194 (optional_arg)


state 132

 195) optional_arg : var _

  $default      reduce using rule 195 (optional_arg)


state 133

  76) set_skip_statement : SET_SKIP_CONDITION expression _
 258) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 234
  NOTEQUAL      shift, and go to state 235
  GTE           shift, and go to state 238
  LTE           shift, and go to state 239
  LT            shift, and go to state 236
  GT            shift, and go to state 237
  PLUS          shift, and go to state 240
  MINUS         shift, and go to state 241
  STAR          shift, and go to state 243
  SLASH         shift, and go to state 244
  DIV           shift, and go to state 245
  AND           shift, and go to state 247
  OR            shift, and go to state 242
  MOD           shift, and go to state 246
  $default      reduce using rule 76 (set_skip_statement)

  operator      go to state 233

state 134

  77) function_call : WORD _
 225) var_without_namespaces : WORD _
 226) var_without_namespaces : WORD _ var_method_modifiers
 251) ns : WORD _ COLON COLON

  DOT           shift, and go to state 159
  COLON         shift, and go to state 160
  LPAREN        reduce using rule 77 (function_call)
  LPAREN        [reduce using rule 225 (var_without_namespaces)]
  $default      reduce using rule 225 (var_without_namespaces)

  var_method_modifiers  go to state 157
  var_method_modifier  go to state 158

state 135

 252) expression : unary_expression _

  $default      reduce using rule 252 (expression)


state 136

 253) expression : binary_expression _

  $default      reduce using rule 253 (expression)


state 137

 254) unary_expression : factor _

  $default      reduce using rule 254 (unary_expression)


state 138

 255) unary_expression : address _

  $default      reduce using rule 255 (unary_expression)


state 139

 256) unary_expression : BANG _ factor

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 114
  MINUS         shift, and go to state 154
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 150
  ON_OFF        shift, and go to state 151
  LPAREN        shift, and go to state 152
  SYSTEM        shift, and go to state 93
  OPERATION     shift, and go to state 155

  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  factor        go to state 248
  number        go to state 141
  signed_number  go to state 142
  operation     go to state 143
  var           go to state 144
  signed_var    go to state 145
  var_system    go to state 146
  indirect_thing  go to state 147
  paren_expr    go to state 148
  booleans      go to state 149
  sign          go to state 153
  integer       go to state 127

state 140

 257) unary_expression : basic_program_call _

  $default      reduce using rule 257 (unary_expression)


state 141

 273) factor : number _

  $default      reduce using rule 273 (factor)


state 142

 274) factor : signed_number _

  $default      reduce using rule 274 (factor)


state 143

 275) factor : operation _

  $default      reduce using rule 275 (factor)


state 144

 276) factor : var _

  $default      reduce using rule 276 (factor)


state 145

 277) factor : signed_var _

  $default      reduce using rule 277 (factor)


state 146

 278) factor : var_system _

  $default      reduce using rule 278 (factor)


state 147

 279) factor : indirect_thing _

  $default      reduce using rule 279 (factor)


state 148

 280) factor : paren_expr _

  $default      reduce using rule 280 (factor)


state 149

 281) factor : booleans _

  $default      reduce using rule 281 (factor)


state 150

 282) booleans : TRUE_FALSE _

  $default      reduce using rule 282 (booleans)


state 151

 283) booleans : ON_OFF _

  $default      reduce using rule 283 (booleans)


state 152

 284) paren_expr : LPAREN _ expression RPAREN

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 134
  BANG          shift, and go to state 139
  MINUS         shift, and go to state 154
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 150
  ON_OFF        shift, and go to state 151
  LPAREN        shift, and go to state 152
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 155

  namespaces    go to state 56
  function_call  go to state 57
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 135
  binary_expression  go to state 136
  factor        go to state 137
  address       go to state 138
  basic_program_call  go to state 140
  expression    go to state 249
  number        go to state 141
  signed_number  go to state 142
  operation     go to state 143
  var           go to state 144
  signed_var    go to state 145
  var_system    go to state 146
  indirect_thing  go to state 147
  paren_expr    go to state 148
  booleans      go to state 149
  sign          go to state 153
  integer       go to state 127

state 153

 289) signed_number : sign _ DIGIT
 290) signed_number : sign _ REAL
 291) signed_var : sign _ var

  REAL          shift, and go to state 251
  DIGIT         shift, and go to state 250
  WORD          shift, and go to state 114

  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  var           go to state 252

state 154

 292) sign : MINUS _

  $default      reduce using rule 292 (sign)


state 155

 328) operation : OPERATION _ LBRACK var_or_indirect RBRACK
 329) operation : OPERATION _ LBRACK var_or_indirect COMMA var_or_indirect RBRACK
 330) operation : OPERATION _ LBRACK signed_number RBRACK
 331) operation : OPERATION _ LBRACK number RBRACK

  LBRACK        shift, and go to state 253


state 156

 210) definition : WORD ASSIGN _ definable

  INPUT         shift, and go to state 273
  OUTPUT        shift, and go to state 274
  NUMREG        shift, and go to state 271
  POSREG        shift, and go to state 272
  VREG          shift, and go to state 269
  SREG          shift, and go to state 265
  ARG           shift, and go to state 268
  UALM          shift, and go to state 266
  TOOLREG       shift, and go to state 276
  FRAMEREG      shift, and go to state 277
  STRING        shift, and go to state 254
  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  MINUS         shift, and go to state 154
  POSITION      shift, and go to state 270
  TIMER         shift, and go to state 267
  TRUE_FALSE    shift, and go to state 150
  ON_OFF        shift, and go to state 151
  LOCALREG      shift, and go to state 279
  LOCALPOSE     shift, and go to state 280
  LOCALFLAG     shift, and go to state 281
  SHAREDREG     shift, and go to state 283
  SHAREDPOSE    shift, and go to state 284
  SHAREDFLAG    shift, and go to state 285

  definable     go to state 255
  sign          go to state 256
  integer       go to state 127
  reg           go to state 257
  number        go to state 258
  signed_number  go to state 259
  string        go to state 260
  framereg      go to state 261
  booleans      go to state 262
  localvars     go to state 263
  sharedvars    go to state 264
  reg_types     go to state 275
  frametype     go to state 278
  local_types   go to state 282
  shared_types  go to state 286

state 157

 226) var_without_namespaces : WORD var_method_modifiers _
 229) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 159
  $default      reduce using rule 226 (var_without_namespaces)

  var_method_modifier  go to state 287

state 158

 228) var_method_modifiers : var_method_modifier _

  $default      reduce using rule 228 (var_method_modifiers)


state 159

 236) var_method_modifier : DOT _ swallow_newlines WORD
 237) var_method_modifier : DOT _ swallow_newlines group_statement
 238) var_method_modifier : DOT _ swallow_newlines POSEATTR
 239) var_method_modifier : DOT _ swallow_newlines OFFSET
 240) var_method_modifier : DOT _ swallow_newlines coord_system
 241) var_method_modifier : DOT _ swallow_newlines FIX

  NEWLINE       shift, and go to state 212
  $default      reduce using rule 341 (swallow_newlines)

  swallow_newlines  go to state 288

state 160

 251) ns : WORD COLON _ COLON

  COLON         shift, and go to state 289


state 161

  78) function_call : namespaces WORD _
 225) var_without_namespaces : WORD _
 226) var_without_namespaces : WORD _ var_method_modifiers
 251) ns : WORD _ COLON COLON

  DOT           shift, and go to state 159
  COLON         shift, and go to state 160
  LPAREN        reduce using rule 78 (function_call)
  LPAREN        [reduce using rule 225 (var_without_namespaces)]
  $default      reduce using rule 225 (var_without_namespaces)

  var_method_modifiers  go to state 157
  var_method_modifier  go to state 158

state 162

 227) var_with_namespaces : namespaces var_without_namespaces _

  $default      reduce using rule 227 (var_with_namespaces)


state 163

 250) namespaces : namespaces ns _

  $default      reduce using rule 250 (namespaces)


state 164

  79) basic_program_call : function_call LPAREN _ args RPAREN

  STRING        shift, and go to state 254
  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 134
  BANG          shift, and go to state 139
  MINUS         shift, and go to state 154
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 150
  ON_OFF        shift, and go to state 151
  LPAREN        shift, and go to state 152
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 155
  $default      reduce using rule 85 (args)

  namespaces    go to state 56
  function_call  go to state 57
  args          go to state 290
  arg           go to state 291
  number        go to state 292
  signed_number  go to state 293
  var           go to state 294
  string        go to state 295
  address       go to state 296
  expression    go to state 297
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 135
  binary_expression  go to state 136
  factor        go to state 137
  basic_program_call  go to state 140
  operation     go to state 143
  signed_var    go to state 145
  var_system    go to state 146
  indirect_thing  go to state 147
  paren_expr    go to state 148
  booleans      go to state 149
  sign          go to state 153
  integer       go to state 127

state 165

  77) function_call : WORD _
 251) ns : WORD _ COLON COLON

  COLON         shift, and go to state 160
  $default      reduce using rule 77 (function_call)


state 166

  78) function_call : namespaces _ WORD
 250) namespaces : namespaces _ ns

  WORD          shift, and go to state 298

  ns            go to state 163

state 167

  81) program_call : RUN function_call _ LPAREN args RPAREN

  LPAREN        shift, and go to state 299


state 168

  82) program_call : CALL var_or_indirect _ LPAREN args RPAREN

  LPAREN        shift, and go to state 300


state 169

  96) return_statement : RETURN LPAREN _ expression RPAREN

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 134
  BANG          shift, and go to state 139
  MINUS         shift, and go to state 154
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 150
  ON_OFF        shift, and go to state 151
  LPAREN        shift, and go to state 152
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 155

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 301
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 135
  binary_expression  go to state 136
  factor        go to state 137
  address       go to state 138
  basic_program_call  go to state 140
  number        go to state 141
  signed_number  go to state 142
  operation     go to state 143
  var           go to state 144
  signed_var    go to state 145
  var_system    go to state 146
  indirect_thing  go to state 147
  paren_expr    go to state 148
  booleans      go to state 149
  sign          go to state 153
  integer       go to state 127

state 170

  99) io_method : IO_METHOD var_or_indirect _

  $default      reduce using rule 99 (io_method)


state 171

 100) io_method : IO_METHOD LPAREN _ var_or_indirect RPAREN
 101) io_method : IO_METHOD LPAREN _ var_or_indirect COMMA number COMMA STRING RPAREN

  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95
  SYSTEM        shift, and go to state 93

  var_or_indirect  go to state 302
  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 172

 221) assignable_range : var RANGE _ var

  WORD          shift, and go to state 114

  var           go to state 303
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 173

 105) jump : JUMP label _

  $default      reduce using rule 105 (jump)


state 174

 106) jump : JUMP indirect_thing _

  $default      reduce using rule 106 (jump)


state 175

 107) conditional : IF expression _ block elsif_conditions else_block END
 109) conditional_block : IF expression _ THEN block elsif_block else_block END
 258) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 304
  EEQUAL        shift, and go to state 234
  NOTEQUAL      shift, and go to state 235
  GTE           shift, and go to state 238
  LTE           shift, and go to state 239
  LT            shift, and go to state 236
  GT            shift, and go to state 237
  PLUS          shift, and go to state 240
  MINUS         shift, and go to state 241
  STAR          shift, and go to state 243
  SLASH         shift, and go to state 244
  DIV           shift, and go to state 245
  AND           shift, and go to state 247
  OR            shift, and go to state 242
  MOD           shift, and go to state 246
  THEN          shift, and go to state 306

  block         go to state 305
  operator      go to state 233

state 176

 108) conditional : UNLESS expression _ block else_block END
 258) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 304
  EEQUAL        shift, and go to state 234
  NOTEQUAL      shift, and go to state 235
  GTE           shift, and go to state 238
  LTE           shift, and go to state 239
  LT            shift, and go to state 236
  GT            shift, and go to state 237
  PLUS          shift, and go to state 240
  MINUS         shift, and go to state 241
  STAR          shift, and go to state 243
  SLASH         shift, and go to state 244
  DIV           shift, and go to state 245
  AND           shift, and go to state 247
  OR            shift, and go to state 242
  MOD           shift, and go to state 246

  block         go to state 307
  operator      go to state 233

state 177

 118) forloop : FOR int_or_var _ IN LPAREN int_or_var TO int_or_var RPAREN block END
 119) forloop : FOR int_or_var _ IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  IN            shift, and go to state 308


state 178

 121) int_or_var : integer _

  $default      reduce using rule 121 (int_or_var)


state 179

 122) int_or_var : var _

  $default      reduce using rule 122 (int_or_var)


state 180

 123) int_or_var : indirect_thing _

  $default      reduce using rule 123 (int_or_var)


state 181

 120) while_loop : WHILE expression _ block END
 258) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 304
  EEQUAL        shift, and go to state 234
  NOTEQUAL      shift, and go to state 235
  GTE           shift, and go to state 238
  LTE           shift, and go to state 239
  LT            shift, and go to state 236
  GT            shift, and go to state 237
  PLUS          shift, and go to state 240
  MINUS         shift, and go to state 241
  STAR          shift, and go to state 243
  SLASH         shift, and go to state 244
  DIV           shift, and go to state 245
  AND           shift, and go to state 247
  OR            shift, and go to state 242
  MOD           shift, and go to state 246

  block         go to state 309
  operator      go to state 233

state 182

 124) word_list : word_tuple _

  $default      reduce using rule 124 (word_list)


state 183

 125) word_list : word_list _ word_tuple
 128) using_statement : USING word_list _

  WORD          shift, and go to state 185
  WORD          [reduce using rule 128 (using_statement)]
  COMMA         shift, and go to state 184
  $default      reduce using rule 128 (using_statement)

  word_tuple    go to state 310

state 184

 126) word_tuple : COMMA _ WORD

  WORD          shift, and go to state 311


state 185

 127) word_tuple : WORD _

  $default      reduce using rule 127 (word_tuple)


state 186

 129) compile_statement : COMPILE IMPORT _ word_list

  WORD          shift, and go to state 185
  COMMA         shift, and go to state 184

  word_tuple    go to state 182
  word_list     go to state 312

state 187

 125) word_list : word_list _ word_tuple
 130) import_statement : IMPORT word_list _

  WORD          shift, and go to state 185
  WORD          [reduce using rule 130 (import_statement)]
  COMMA         shift, and go to state 184
  $default      reduce using rule 130 (import_statement)

  word_tuple    go to state 310

state 188

 131) namespace : NAMESPACE WORD _ block END

  NEWLINE       shift, and go to state 304

  block         go to state 313

state 189

 132) function : INLINE FUNCTION _ WORD LPAREN program_vars RPAREN block END
 133) function : INLINE FUNCTION _ WORD LPAREN program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 314


state 190

 134) function : FUNCTION WORD _ LPAREN program_vars RPAREN block END
 135) function : FUNCTION WORD _ LPAREN program_vars RPAREN COLON WORD block END

  LPAREN        shift, and go to state 315


state 191

 136) case_statement : CASE var _ swallow_newlines case_conditions case_else END

  NEWLINE       shift, and go to state 212
  $default      reduce using rule 341 (swallow_newlines)

  swallow_newlines  go to state 316

state 192

 147) inline_conditional : inlineable IF _ expression

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 134
  BANG          shift, and go to state 139
  MINUS         shift, and go to state 154
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 150
  ON_OFF        shift, and go to state 151
  LPAREN        shift, and go to state 152
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 155

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 317
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 135
  binary_expression  go to state 136
  factor        go to state 137
  address       go to state 138
  basic_program_call  go to state 140
  number        go to state 141
  signed_number  go to state 142
  operation     go to state 143
  var           go to state 144
  signed_var    go to state 145
  var_system    go to state 146
  indirect_thing  go to state 147
  paren_expr    go to state 148
  booleans      go to state 149
  sign          go to state 153
  integer       go to state 127

state 193

 148) inline_conditional : inlineable UNLESS _ expression

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 134
  BANG          shift, and go to state 139
  MINUS         shift, and go to state 154
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 150
  ON_OFF        shift, and go to state 151
  LPAREN        shift, and go to state 152
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 155

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 318
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 135
  binary_expression  go to state 136
  factor        go to state 137
  address       go to state 138
  basic_program_call  go to state 140
  number        go to state 141
  signed_number  go to state 142
  operation     go to state 143
  var           go to state 144
  signed_var    go to state 145
  var_system    go to state 146
  indirect_thing  go to state 147
  paren_expr    go to state 148
  booleans      go to state 149
  sign          go to state 153
  integer       go to state 127

state 194

 155) motion_statement : MOVE DOT _ swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers
 156) motion_statement : MOVE DOT _ swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  NEWLINE       shift, and go to state 212
  $default      reduce using rule 341 (swallow_newlines)

  swallow_newlines  go to state 319

state 195

 209) definition : memory_types ASSIGN _ definable

  INPUT         shift, and go to state 273
  OUTPUT        shift, and go to state 274
  NUMREG        shift, and go to state 271
  POSREG        shift, and go to state 272
  VREG          shift, and go to state 269
  SREG          shift, and go to state 265
  ARG           shift, and go to state 268
  UALM          shift, and go to state 266
  TOOLREG       shift, and go to state 276
  FRAMEREG      shift, and go to state 277
  STRING        shift, and go to state 254
  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  MINUS         shift, and go to state 154
  POSITION      shift, and go to state 270
  TIMER         shift, and go to state 267
  TRUE_FALSE    shift, and go to state 150
  ON_OFF        shift, and go to state 151
  LOCALREG      shift, and go to state 279
  LOCALPOSE     shift, and go to state 280
  LOCALFLAG     shift, and go to state 281
  SHAREDREG     shift, and go to state 283
  SHAREDPOSE    shift, and go to state 284
  SHAREDFLAG    shift, and go to state 285

  definable     go to state 320
  sign          go to state 256
  integer       go to state 127
  reg           go to state 257
  number        go to state 258
  signed_number  go to state 259
  string        go to state 260
  framereg      go to state 261
  booleans      go to state 262
  localvars     go to state 263
  sharedvars    go to state 264
  reg_types     go to state 275
  frametype     go to state 278
  local_types   go to state 282
  shared_types  go to state 286

state 196

 211) assignment : var_or_indirect EQUAL _ expression

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 134
  BANG          shift, and go to state 139
  MINUS         shift, and go to state 154
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 150
  ON_OFF        shift, and go to state 151
  LPAREN        shift, and go to state 152
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 155

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 321
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 135
  binary_expression  go to state 136
  factor        go to state 137
  address       go to state 138
  basic_program_call  go to state 140
  number        go to state 141
  signed_number  go to state 142
  operation     go to state 143
  var           go to state 144
  signed_var    go to state 145
  var_system    go to state 146
  indirect_thing  go to state 147
  paren_expr    go to state 148
  booleans      go to state 149
  sign          go to state 153
  integer       go to state 127

state 197

 212) assignment : var_or_indirect PLUS _ EQUAL expression

  EQUAL         shift, and go to state 322


state 198

 213) assignment : var_or_indirect MINUS _ EQUAL expression

  EQUAL         shift, and go to state 323


state 199

 214) assignment : var_or_indirect STAR _ EQUAL expression

  EQUAL         shift, and go to state 324


state 200

 215) assignment : var_or_indirect SLASH _ EQUAL expression

  EQUAL         shift, and go to state 325


state 201

 217) position_assignment : var_or_indirect ARROW _ array

  LBRACK        shift, and go to state 327

  array         go to state 326

state 202

 216) position_assignment : DEFAULTPOS var_method_modifiers _ ARROW array
 229) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 159
  ARROW         shift, and go to state 328

  var_method_modifier  go to state 287

state 203

 218) position_assignment : LPAREN assignable_range _ RPAREN var_method_modifiers ARROW array

  RPAREN        shift, and go to state 329


state 204

 221) assignable_range : var _ RANGE var
 222) assignable_range : var _

  RANGE         shift, and go to state 172
  $default      reduce using rule 222 (assignable_range)


state 205

 219) position_assignment : assignable_range EQUAL _ assignable_range
 220) position_assignment : assignable_range EQUAL _ LPAREN assignable_range RPAREN pose_range_modifiers

  WORD          shift, and go to state 114
  LPAREN        shift, and go to state 331

  assignable_range  go to state 330
  var           go to state 204
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 206

 242) var_system : SYSTEM WORD _ var_system_modifers
 243) var_system : SYSTEM WORD _ LBRACK integer RBRACK var_system_modifers

  DOT           shift, and go to state 335
  DOT           [reduce using rule 247 (var_system_modifers)]
  LBRACK        shift, and go to state 333
  $default      reduce using rule 247 (var_system_modifers)

  var_system_modifers  go to state 332
  var_system_modifer  go to state 334

state 207

 244) var_system : SYSTEM LBRACK _ WORD RBRACK WORD var_system_modifers

  WORD          shift, and go to state 336


state 208

 285) indirect_thing : INDIRECT LPAREN _ STRING COMMA indirectable RPAREN
 286) indirect_thing : INDIRECT LPAREN _ STRING COMMA indirectable COMMA indirectable RPAREN
 287) indirect_thing : INDIRECT LPAREN _ STRING COMMA indirectable RPAREN var_method_modifiers
 288) indirect_thing : INDIRECT LPAREN _ STRING COMMA indirectable COMMA indirectable RPAREN var_method_modifiers

  STRING        shift, and go to state 337


state 209

 332) address : ADDRESS var _

  $default      reduce using rule 332 (address)


state 210

 334) message : MESSAGE LPAREN _ STRING RPAREN

  STRING        shift, and go to state 338


state 211

 335) warning : WARNING LPAREN _ STRING RPAREN

  STRING        shift, and go to state 339


state 212

 340) swallow_newlines : NEWLINE _

  $default      reduce using rule 340 (swallow_newlines)


state 213

 342) position_data : POSITION_DATA sn _ hash sn END

  LBRACE        shift, and go to state 341

  hash          go to state 340

state 214

 343) sn : swallow_newlines _

  $default      reduce using rule 343 (sn)


state 215


  $default      accept


state 216

   4) statements : statements statement terminator _

  $default      reduce using rule 4 (statements)


state 217

   6) optional_newline : NEWLINE _

  $default      reduce using rule 6 (optional_newline)


state 218

 337) terminator : comment optional_newline _

  $default      reduce using rule 337 (terminator)


state 219

  43) lpos_or_jpos : LPOS LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 342


state 220

  44) lpos_or_jpos : JPOS LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 343


state 221

  46) tp_header_definition : TP_HEADER EQUAL tp_header_value _

  $default      reduce using rule 46 (tp_header_definition)


state 222

  47) tp_header_value : STRING _

  $default      reduce using rule 47 (tp_header_value)


state 223

  48) tp_header_value : TRUE_FALSE _

  $default      reduce using rule 48 (tp_header_value)


state 224

  49) tp_header_value : ON_OFF _

  $default      reduce using rule 49 (tp_header_value)


state 225

  55) tp_application_definition : TP_APPLICATION_TYPE EQUAL sn _ tp_tool_methods

  LBRACE        shift, and go to state 344

  tp_tool_methods  go to state 345

state 226

  59) wait_statement : WAIT_FOR LPAREN indirectable _ COMMA STRING RPAREN

  COMMA         shift, and go to state 346


state 227

  60) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN
  61) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN DOT wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN expression _ RPAREN DOT wait_modifier DOT wait_modifier
 258) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 234
  NOTEQUAL      shift, and go to state 235
  GTE           shift, and go to state 238
  LTE           shift, and go to state 239
  LT            shift, and go to state 236
  GT            shift, and go to state 237
  PLUS          shift, and go to state 240
  MINUS         shift, and go to state 241
  STAR          shift, and go to state 243
  SLASH         shift, and go to state 244
  DIV           shift, and go to state 245
  AND           shift, and go to state 247
  OR            shift, and go to state 242
  MOD           shift, and go to state 246
  RPAREN        shift, and go to state 347

  operator      go to state 233

state 228

  67) label : LABEL COLON integer _

  $default      reduce using rule 67 (label)


state 229

  69) label : LABEL_SET LPAREN case_allowed_condition _ RPAREN

  RPAREN        shift, and go to state 348


state 230

 140) case_allowed_condition : number _

  $default      reduce using rule 140 (case_allowed_condition)


state 231

 141) case_allowed_condition : var _

  $default      reduce using rule 141 (case_allowed_condition)


state 232

  73) use_statement : FANUC_USE LPAREN indirectable _ RPAREN
  74) use_statement : FANUC_USE LPAREN indirectable _ COMMA group_statement RPAREN

  RPAREN        shift, and go to state 349
  COMMA         shift, and go to state 350


state 233

 258) binary_expression : expression operator _ expression

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 134
  BANG          shift, and go to state 139
  MINUS         shift, and go to state 154
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 150
  ON_OFF        shift, and go to state 151
  LPAREN        shift, and go to state 152
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 155

  namespaces    go to state 56
  function_call  go to state 57
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 135
  binary_expression  go to state 136
  factor        go to state 137
  address       go to state 138
  basic_program_call  go to state 140
  expression    go to state 351
  number        go to state 141
  signed_number  go to state 142
  operation     go to state 143
  var           go to state 144
  signed_var    go to state 145
  var_system    go to state 146
  indirect_thing  go to state 147
  paren_expr    go to state 148
  booleans      go to state 149
  sign          go to state 153
  integer       go to state 127

state 234

 259) operator : EEQUAL _

  $default      reduce using rule 259 (operator)


state 235

 260) operator : NOTEQUAL _

  $default      reduce using rule 260 (operator)


state 236

 261) operator : LT _

  $default      reduce using rule 261 (operator)


state 237

 262) operator : GT _

  $default      reduce using rule 262 (operator)


state 238

 263) operator : GTE _

  $default      reduce using rule 263 (operator)


state 239

 264) operator : LTE _

  $default      reduce using rule 264 (operator)


state 240

 265) operator : PLUS _

  $default      reduce using rule 265 (operator)


state 241

 266) operator : MINUS _

  $default      reduce using rule 266 (operator)


state 242

 267) operator : OR _

  $default      reduce using rule 267 (operator)


state 243

 268) operator : STAR _

  $default      reduce using rule 268 (operator)


state 244

 269) operator : SLASH _

  $default      reduce using rule 269 (operator)


state 245

 270) operator : DIV _

  $default      reduce using rule 270 (operator)


state 246

 271) operator : MOD _

  $default      reduce using rule 271 (operator)


state 247

 272) operator : AND _

  $default      reduce using rule 272 (operator)


state 248

 256) unary_expression : BANG factor _

  $default      reduce using rule 256 (unary_expression)


state 249

 258) binary_expression : expression _ operator expression
 284) paren_expr : LPAREN expression _ RPAREN

  EEQUAL        shift, and go to state 234
  NOTEQUAL      shift, and go to state 235
  GTE           shift, and go to state 238
  LTE           shift, and go to state 239
  LT            shift, and go to state 236
  GT            shift, and go to state 237
  PLUS          shift, and go to state 240
  MINUS         shift, and go to state 241
  STAR          shift, and go to state 243
  SLASH         shift, and go to state 244
  DIV           shift, and go to state 245
  AND           shift, and go to state 247
  OR            shift, and go to state 242
  MOD           shift, and go to state 246
  RPAREN        shift, and go to state 352

  operator      go to state 233

state 250

 289) signed_number : sign DIGIT _

  $default      reduce using rule 289 (signed_number)


state 251

 290) signed_number : sign REAL _

  $default      reduce using rule 290 (signed_number)


state 252

 291) signed_var : sign var _

  $default      reduce using rule 291 (signed_var)


state 253

 328) operation : OPERATION LBRACK _ var_or_indirect RBRACK
 329) operation : OPERATION LBRACK _ var_or_indirect COMMA var_or_indirect RBRACK
 330) operation : OPERATION LBRACK _ signed_number RBRACK
 331) operation : OPERATION LBRACK _ number RBRACK

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 114
  MINUS         shift, and go to state 154
  INDIRECT      shift, and go to state 95
  SYSTEM        shift, and go to state 93

  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  sign          go to state 256
  integer       go to state 127
  var_or_indirect  go to state 353
  signed_number  go to state 354
  number        go to state 355

state 254

  98) string : STRING _

  $default      reduce using rule 98 (string)


state 255

 210) definition : WORD ASSIGN definable _

  $default      reduce using rule 210 (definition)


state 256

 289) signed_number : sign _ DIGIT
 290) signed_number : sign _ REAL

  REAL          shift, and go to state 251
  DIGIT         shift, and go to state 250


state 257

 296) definable : reg _

  $default      reduce using rule 296 (definable)


state 258

 297) definable : number _

  $default      reduce using rule 297 (definable)


state 259

 298) definable : signed_number _

  $default      reduce using rule 298 (definable)


state 260

 299) definable : string _

  $default      reduce using rule 299 (definable)


state 261

 300) definable : framereg _

  $default      reduce using rule 300 (definable)


state 262

 301) definable : booleans _

  $default      reduce using rule 301 (definable)


state 263

 302) definable : localvars _

  $default      reduce using rule 302 (definable)


state 264

 303) definable : sharedvars _

  $default      reduce using rule 303 (definable)


state 265

 306) reg_types : SREG _

  $default      reduce using rule 306 (reg_types)


state 266

 307) reg_types : UALM _

  $default      reduce using rule 307 (reg_types)


state 267

 308) reg_types : TIMER _

  $default      reduce using rule 308 (reg_types)


state 268

 309) reg_types : ARG _

  $default      reduce using rule 309 (reg_types)


state 269

 310) reg_types : VREG _

  $default      reduce using rule 310 (reg_types)


state 270

 311) reg_types : POSITION _

  $default      reduce using rule 311 (reg_types)


state 271

 312) reg_types : NUMREG _

  $default      reduce using rule 312 (reg_types)


state 272

 313) reg_types : POSREG _

  $default      reduce using rule 313 (reg_types)


state 273

 314) reg_types : INPUT _

  $default      reduce using rule 314 (reg_types)


state 274

 315) reg_types : OUTPUT _

  $default      reduce using rule 315 (reg_types)


state 275

 316) reg : reg_types _ LBRACK definable_range RBRACK

  LBRACK        shift, and go to state 356


state 276

 317) frametype : TOOLREG _

  $default      reduce using rule 317 (frametype)


state 277

 318) frametype : FRAMEREG _

  $default      reduce using rule 318 (frametype)


state 278

 319) framereg : frametype _ LBRACK DIGIT RBRACK

  LBRACK        shift, and go to state 357


state 279

 320) local_types : LOCALREG _

  $default      reduce using rule 320 (local_types)


state 280

 321) local_types : LOCALPOSE _

  $default      reduce using rule 321 (local_types)


state 281

 322) local_types : LOCALFLAG _

  $default      reduce using rule 322 (local_types)


state 282

 323) localvars : local_types _ LBRACK RBRACK

  LBRACK        shift, and go to state 358


state 283

 324) shared_types : SHAREDREG _

  $default      reduce using rule 324 (shared_types)


state 284

 325) shared_types : SHAREDPOSE _

  $default      reduce using rule 325 (shared_types)


state 285

 326) shared_types : SHAREDFLAG _

  $default      reduce using rule 326 (shared_types)


state 286

 327) sharedvars : shared_types _ LBRACK RBRACK

  LBRACK        shift, and go to state 359


state 287

 229) var_method_modifiers : var_method_modifiers var_method_modifier _

  $default      reduce using rule 229 (var_method_modifiers)


state 288

 236) var_method_modifier : DOT swallow_newlines _ WORD
 237) var_method_modifier : DOT swallow_newlines _ group_statement
 238) var_method_modifier : DOT swallow_newlines _ POSEATTR
 239) var_method_modifier : DOT swallow_newlines _ OFFSET
 240) var_method_modifier : DOT swallow_newlines _ coord_system
 241) var_method_modifier : DOT swallow_newlines _ FIX

  OFFSET        shift, and go to state 367
  GROUP         shift, and go to state 360
  WORD          shift, and go to state 364
  POSEATTR      shift, and go to state 366
  SPHERE        shift, and go to state 361
  POLAR         shift, and go to state 362
  ORIGIN        shift, and go to state 363
  FIX           shift, and go to state 369

  group_statement  go to state 365
  coord_system  go to state 368

state 289

 251) ns : WORD COLON COLON _

  $default      reduce using rule 251 (ns)


state 290

  79) basic_program_call : function_call LPAREN args _ RPAREN
  84) args : args _ COMMA arg

  RPAREN        shift, and go to state 370
  COMMA         shift, and go to state 371


state 291

  83) args : arg _

  $default      reduce using rule 83 (args)


state 292

  86) arg : number _
 273) factor : number _

  RPAREN        reduce using rule 86 (arg)
  RPAREN        [reduce using rule 273 (factor)]
  COMMA         reduce using rule 86 (arg)
  COMMA         [reduce using rule 273 (factor)]
  $default      reduce using rule 273 (factor)


state 293

  87) arg : signed_number _
 274) factor : signed_number _

  RPAREN        reduce using rule 87 (arg)
  RPAREN        [reduce using rule 274 (factor)]
  COMMA         reduce using rule 87 (arg)
  COMMA         [reduce using rule 274 (factor)]
  $default      reduce using rule 274 (factor)


state 294

  88) arg : var _
 276) factor : var _

  RPAREN        reduce using rule 88 (arg)
  RPAREN        [reduce using rule 276 (factor)]
  COMMA         reduce using rule 88 (arg)
  COMMA         [reduce using rule 276 (factor)]
  $default      reduce using rule 276 (factor)


state 295

  89) arg : string _

  $default      reduce using rule 89 (arg)


state 296

  90) arg : address _
 255) unary_expression : address _

  RPAREN        reduce using rule 90 (arg)
  RPAREN        [reduce using rule 255 (unary_expression)]
  COMMA         reduce using rule 90 (arg)
  COMMA         [reduce using rule 255 (unary_expression)]
  $default      reduce using rule 255 (unary_expression)


state 297

  91) arg : expression _
 258) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 234
  NOTEQUAL      shift, and go to state 235
  GTE           shift, and go to state 238
  LTE           shift, and go to state 239
  LT            shift, and go to state 236
  GT            shift, and go to state 237
  PLUS          shift, and go to state 240
  MINUS         shift, and go to state 241
  STAR          shift, and go to state 243
  SLASH         shift, and go to state 244
  DIV           shift, and go to state 245
  AND           shift, and go to state 247
  OR            shift, and go to state 242
  MOD           shift, and go to state 246
  $default      reduce using rule 91 (arg)

  operator      go to state 233

state 298

  78) function_call : namespaces WORD _
 251) ns : WORD _ COLON COLON

  COLON         shift, and go to state 160
  $default      reduce using rule 78 (function_call)


state 299

  81) program_call : RUN function_call LPAREN _ args RPAREN

  STRING        shift, and go to state 254
  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 134
  BANG          shift, and go to state 139
  MINUS         shift, and go to state 154
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 150
  ON_OFF        shift, and go to state 151
  LPAREN        shift, and go to state 152
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 155
  $default      reduce using rule 85 (args)

  namespaces    go to state 56
  function_call  go to state 57
  args          go to state 372
  arg           go to state 291
  number        go to state 292
  signed_number  go to state 293
  var           go to state 294
  string        go to state 295
  address       go to state 296
  expression    go to state 297
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 135
  binary_expression  go to state 136
  factor        go to state 137
  basic_program_call  go to state 140
  operation     go to state 143
  signed_var    go to state 145
  var_system    go to state 146
  indirect_thing  go to state 147
  paren_expr    go to state 148
  booleans      go to state 149
  sign          go to state 153
  integer       go to state 127

state 300

  82) program_call : CALL var_or_indirect LPAREN _ args RPAREN

  STRING        shift, and go to state 254
  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 134
  BANG          shift, and go to state 139
  MINUS         shift, and go to state 154
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 150
  ON_OFF        shift, and go to state 151
  LPAREN        shift, and go to state 152
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 155
  $default      reduce using rule 85 (args)

  namespaces    go to state 56
  function_call  go to state 57
  args          go to state 373
  arg           go to state 291
  number        go to state 292
  signed_number  go to state 293
  var           go to state 294
  string        go to state 295
  address       go to state 296
  expression    go to state 297
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 135
  binary_expression  go to state 136
  factor        go to state 137
  basic_program_call  go to state 140
  operation     go to state 143
  signed_var    go to state 145
  var_system    go to state 146
  indirect_thing  go to state 147
  paren_expr    go to state 148
  booleans      go to state 149
  sign          go to state 153
  integer       go to state 127

state 301

  96) return_statement : RETURN LPAREN expression _ RPAREN
 258) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 234
  NOTEQUAL      shift, and go to state 235
  GTE           shift, and go to state 238
  LTE           shift, and go to state 239
  LT            shift, and go to state 236
  GT            shift, and go to state 237
  PLUS          shift, and go to state 240
  MINUS         shift, and go to state 241
  STAR          shift, and go to state 243
  SLASH         shift, and go to state 244
  DIV           shift, and go to state 245
  AND           shift, and go to state 247
  OR            shift, and go to state 242
  MOD           shift, and go to state 246
  RPAREN        shift, and go to state 374

  operator      go to state 233

state 302

 100) io_method : IO_METHOD LPAREN var_or_indirect _ RPAREN
 101) io_method : IO_METHOD LPAREN var_or_indirect _ COMMA number COMMA STRING RPAREN

  RPAREN        shift, and go to state 375
  COMMA         shift, and go to state 376


state 303

 221) assignable_range : var RANGE var _

  $default      reduce using rule 221 (assignable_range)


state 304

   5) block : NEWLINE _ statements

  COMMENT       shift, and go to state 97
  MESSAGE       shift, and go to state 98
  WARNING       shift, and go to state 99
  JUMP          shift, and go to state 65
  IO_METHOD     shift, and go to state 62
  MOVE          shift, and go to state 82
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 55
  IF            shift, and go to state 66
  UNLESS        shift, and go to state 67
  FOR           shift, and go to state 68
  WHILE         shift, and go to state 69
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 52
  COLL_GUARD    shift, and go to state 53
  SET_SKIP_CONDITION  shift, and go to state 54
  NAMESPACE     shift, and go to state 73
  CASE          shift, and go to state 76
  INDIRECT      shift, and go to state 95
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 61
  POSITION_DATA  shift, and go to state 100
  CALL          shift, and go to state 60
  RUN           shift, and go to state 59
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 89
  LABEL         shift, and go to state 49
  LABEL_SET     shift, and go to state 50
  LABEL_POP     shift, and go to state 51
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 75
  USING         shift, and go to state 70
  IMPORT        shift, and go to state 72
  COMPILE       shift, and go to state 71
  INLINE        shift, and go to state 74
  DEFAULTPOS    shift, and go to state 88
  LOCALSTACK    shift, and go to state 84
  SHAREDSTACK   shift, and go to state 85

  statement     go to state 3
  statements    go to state 377
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 56
  function_call  go to state 57
  basic_program_call  go to state 58
  var           go to state 63
  indirect_thing  go to state 64
  inlineable    go to state 77
  jump          go to state 78
  assignment    go to state 79
  io_method     go to state 80
  program_call  go to state 81
  label         go to state 83
  memory_types  go to state 86
  var_or_indirect  go to state 87
  assignable_range  go to state 90
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94

state 305

 107) conditional : IF expression block _ elsif_conditions else_block END

  ELSIF         shift, and go to state 380
  ELSIF         [reduce using rule 112 (elsif_conditions)]
  $default      reduce using rule 112 (elsif_conditions)

  elsif_conditions  go to state 378
  elsif_condition  go to state 379

state 306

 109) conditional_block : IF expression THEN _ block elsif_block else_block END

  NEWLINE       shift, and go to state 304

  block         go to state 381

state 307

 108) conditional : UNLESS expression block _ else_block END

  ELSE          shift, and go to state 383
  $default      reduce using rule 154 (else_block)

  else_block    go to state 382

state 308

 118) forloop : FOR int_or_var IN _ LPAREN int_or_var TO int_or_var RPAREN block END
 119) forloop : FOR int_or_var IN _ LPAREN int_or_var DOWNTO int_or_var RPAREN block END

  LPAREN        shift, and go to state 384


state 309

 120) while_loop : WHILE expression block _ END

  END           shift, and go to state 385


state 310

 125) word_list : word_list word_tuple _

  $default      reduce using rule 125 (word_list)


state 311

 126) word_tuple : COMMA WORD _

  $default      reduce using rule 126 (word_tuple)


state 312

 125) word_list : word_list _ word_tuple
 129) compile_statement : COMPILE IMPORT word_list _

  WORD          shift, and go to state 185
  WORD          [reduce using rule 129 (compile_statement)]
  COMMA         shift, and go to state 184
  $default      reduce using rule 129 (compile_statement)

  word_tuple    go to state 310

state 313

 131) namespace : NAMESPACE WORD block _ END

  END           shift, and go to state 386


state 314

 132) function : INLINE FUNCTION WORD _ LPAREN program_vars RPAREN block END
 133) function : INLINE FUNCTION WORD _ LPAREN program_vars RPAREN COLON WORD block END

  LPAREN        shift, and go to state 387


state 315

 134) function : FUNCTION WORD LPAREN _ program_vars RPAREN block END
 135) function : FUNCTION WORD LPAREN _ program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 390
  $default      reduce using rule 94 (program_vars)

  program_var   go to state 388
  program_vars  go to state 389

state 316

 136) case_statement : CASE var swallow_newlines _ case_conditions case_else END

  WHEN          shift, and go to state 393

  case_conditions  go to state 391
  case_condition  go to state 392

state 317

 147) inline_conditional : inlineable IF expression _
 258) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 234
  NOTEQUAL      shift, and go to state 235
  GTE           shift, and go to state 238
  LTE           shift, and go to state 239
  LT            shift, and go to state 236
  GT            shift, and go to state 237
  PLUS          shift, and go to state 240
  MINUS         shift, and go to state 241
  STAR          shift, and go to state 243
  SLASH         shift, and go to state 244
  DIV           shift, and go to state 245
  AND           shift, and go to state 247
  OR            shift, and go to state 242
  MOD           shift, and go to state 246
  $default      reduce using rule 147 (inline_conditional)

  operator      go to state 233

state 318

 148) inline_conditional : inlineable UNLESS expression _
 258) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 234
  NOTEQUAL      shift, and go to state 235
  GTE           shift, and go to state 238
  LTE           shift, and go to state 239
  LT            shift, and go to state 236
  GT            shift, and go to state 237
  PLUS          shift, and go to state 240
  MINUS         shift, and go to state 241
  STAR          shift, and go to state 243
  SLASH         shift, and go to state 244
  DIV           shift, and go to state 245
  AND           shift, and go to state 247
  OR            shift, and go to state 242
  MOD           shift, and go to state 246
  $default      reduce using rule 148 (inline_conditional)

  operator      go to state 233

state 319

 155) motion_statement : MOVE DOT swallow_newlines _ TO LPAREN var_or_indirect RPAREN motion_modifiers
 156) motion_statement : MOVE DOT swallow_newlines _ MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  TO            shift, and go to state 394
  MID           shift, and go to state 395


state 320

 209) definition : memory_types ASSIGN definable _

  $default      reduce using rule 209 (definition)


state 321

 211) assignment : var_or_indirect EQUAL expression _
 258) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 234
  NOTEQUAL      shift, and go to state 235
  GTE           shift, and go to state 238
  LTE           shift, and go to state 239
  LT            shift, and go to state 236
  GT            shift, and go to state 237
  PLUS          shift, and go to state 240
  MINUS         shift, and go to state 241
  STAR          shift, and go to state 243
  SLASH         shift, and go to state 244
  DIV           shift, and go to state 245
  AND           shift, and go to state 247
  OR            shift, and go to state 242
  MOD           shift, and go to state 246
  $default      reduce using rule 211 (assignment)

  operator      go to state 233

state 322

 212) assignment : var_or_indirect PLUS EQUAL _ expression

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 134
  BANG          shift, and go to state 139
  MINUS         shift, and go to state 154
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 150
  ON_OFF        shift, and go to state 151
  LPAREN        shift, and go to state 152
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 155

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 396
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 135
  binary_expression  go to state 136
  factor        go to state 137
  address       go to state 138
  basic_program_call  go to state 140
  number        go to state 141
  signed_number  go to state 142
  operation     go to state 143
  var           go to state 144
  signed_var    go to state 145
  var_system    go to state 146
  indirect_thing  go to state 147
  paren_expr    go to state 148
  booleans      go to state 149
  sign          go to state 153
  integer       go to state 127

state 323

 213) assignment : var_or_indirect MINUS EQUAL _ expression

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 134
  BANG          shift, and go to state 139
  MINUS         shift, and go to state 154
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 150
  ON_OFF        shift, and go to state 151
  LPAREN        shift, and go to state 152
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 155

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 397
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 135
  binary_expression  go to state 136
  factor        go to state 137
  address       go to state 138
  basic_program_call  go to state 140
  number        go to state 141
  signed_number  go to state 142
  operation     go to state 143
  var           go to state 144
  signed_var    go to state 145
  var_system    go to state 146
  indirect_thing  go to state 147
  paren_expr    go to state 148
  booleans      go to state 149
  sign          go to state 153
  integer       go to state 127

state 324

 214) assignment : var_or_indirect STAR EQUAL _ expression

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 134
  BANG          shift, and go to state 139
  MINUS         shift, and go to state 154
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 150
  ON_OFF        shift, and go to state 151
  LPAREN        shift, and go to state 152
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 155

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 398
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 135
  binary_expression  go to state 136
  factor        go to state 137
  address       go to state 138
  basic_program_call  go to state 140
  number        go to state 141
  signed_number  go to state 142
  operation     go to state 143
  var           go to state 144
  signed_var    go to state 145
  var_system    go to state 146
  indirect_thing  go to state 147
  paren_expr    go to state 148
  booleans      go to state 149
  sign          go to state 153
  integer       go to state 127

state 325

 215) assignment : var_or_indirect SLASH EQUAL _ expression

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 134
  BANG          shift, and go to state 139
  MINUS         shift, and go to state 154
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 150
  ON_OFF        shift, and go to state 151
  LPAREN        shift, and go to state 152
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 155

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 399
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 135
  binary_expression  go to state 136
  factor        go to state 137
  address       go to state 138
  basic_program_call  go to state 140
  number        go to state 141
  signed_number  go to state 142
  operation     go to state 143
  var           go to state 144
  signed_var    go to state 145
  var_system    go to state 146
  indirect_thing  go to state 147
  paren_expr    go to state 148
  booleans      go to state 149
  sign          go to state 153
  integer       go to state 127

state 326

 217) position_assignment : var_or_indirect ARROW array _

  $default      reduce using rule 217 (position_assignment)


state 327

 358) array : LBRACK _ sn array_values sn RBRACK

  NEWLINE       shift, and go to state 212
  $default      reduce using rule 341 (swallow_newlines)

  swallow_newlines  go to state 214
  sn            go to state 400

state 328

 216) position_assignment : DEFAULTPOS var_method_modifiers ARROW _ array

  LBRACK        shift, and go to state 327

  array         go to state 401

state 329

 218) position_assignment : LPAREN assignable_range RPAREN _ var_method_modifiers ARROW array

  DOT           shift, and go to state 159

  var_method_modifiers  go to state 402
  var_method_modifier  go to state 158

state 330

 219) position_assignment : assignable_range EQUAL assignable_range _

  $default      reduce using rule 219 (position_assignment)


state 331

 220) position_assignment : assignable_range EQUAL LPAREN _ assignable_range RPAREN pose_range_modifiers

  WORD          shift, and go to state 114

  assignable_range  go to state 403
  var           go to state 204
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 332

 242) var_system : SYSTEM WORD var_system_modifers _
 246) var_system_modifers : var_system_modifers _ var_system_modifer

  DOT           shift, and go to state 335
  DOT           [reduce using rule 242 (var_system)]
  $default      reduce using rule 242 (var_system)

  var_system_modifer  go to state 404

state 333

 243) var_system : SYSTEM WORD LBRACK _ integer RBRACK var_system_modifers

  DIGIT         shift, and go to state 129

  integer       go to state 405

state 334

 245) var_system_modifers : var_system_modifer _

  $default      reduce using rule 245 (var_system_modifers)


state 335

 248) var_system_modifer : DOT _ var_system

  SYSTEM        shift, and go to state 93

  var_system    go to state 406

state 336

 244) var_system : SYSTEM LBRACK WORD _ RBRACK WORD var_system_modifers

  RBRACK        shift, and go to state 407


state 337

 285) indirect_thing : INDIRECT LPAREN STRING _ COMMA indirectable RPAREN
 286) indirect_thing : INDIRECT LPAREN STRING _ COMMA indirectable COMMA indirectable RPAREN
 287) indirect_thing : INDIRECT LPAREN STRING _ COMMA indirectable RPAREN var_method_modifiers
 288) indirect_thing : INDIRECT LPAREN STRING _ COMMA indirectable COMMA indirectable RPAREN var_method_modifiers

  COMMA         shift, and go to state 408


state 338

 334) message : MESSAGE LPAREN STRING _ RPAREN

  RPAREN        shift, and go to state 409


state 339

 335) warning : WARNING LPAREN STRING _ RPAREN

  RPAREN        shift, and go to state 410


state 340

 342) position_data : POSITION_DATA sn hash _ sn END

  NEWLINE       shift, and go to state 212
  $default      reduce using rule 341 (swallow_newlines)

  sn            go to state 411
  swallow_newlines  go to state 214

state 341

 344) hash : LBRACE _ sn hash_attributes sn RBRACE
 345) hash : LBRACE _ sn RBRACE

  NEWLINE       shift, and go to state 212
  $default      reduce using rule 341 (swallow_newlines)

  swallow_newlines  go to state 214
  sn            go to state 412

state 342

  43) lpos_or_jpos : LPOS LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 43 (lpos_or_jpos)


state 343

  44) lpos_or_jpos : JPOS LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 44 (lpos_or_jpos)


state 344

  50) tp_tool_methods : LBRACE _ sn tp_tool_attributes sn RBRACE
  51) tp_tool_methods : LBRACE _ sn RBRACE

  NEWLINE       shift, and go to state 212
  $default      reduce using rule 341 (swallow_newlines)

  sn            go to state 413
  swallow_newlines  go to state 214

state 345

  55) tp_application_definition : TP_APPLICATION_TYPE EQUAL sn tp_tool_methods _

  $default      reduce using rule 55 (tp_application_definition)


state 346

  59) wait_statement : WAIT_FOR LPAREN indirectable COMMA _ STRING RPAREN

  STRING        shift, and go to state 414


state 347

  60) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _
  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _ DOT wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN _ DOT wait_modifier DOT wait_modifier

  DOT           shift, and go to state 415
  $default      reduce using rule 60 (wait_statement)


state 348

  69) label : LABEL_SET LPAREN case_allowed_condition RPAREN _

  $default      reduce using rule 69 (label)


state 349

  73) use_statement : FANUC_USE LPAREN indirectable RPAREN _

  $default      reduce using rule 73 (use_statement)


state 350

  74) use_statement : FANUC_USE LPAREN indirectable COMMA _ group_statement RPAREN

  GROUP         shift, and go to state 360

  group_statement  go to state 416

state 351

 258) binary_expression : expression _ operator expression
 258) binary_expression : expression operator expression _

  EEQUAL        shift, and go to state 234
  EEQUAL        [reduce using rule 258 (binary_expression)]
  NOTEQUAL      shift, and go to state 235
  NOTEQUAL      [reduce using rule 258 (binary_expression)]
  GTE           shift, and go to state 238
  GTE           [reduce using rule 258 (binary_expression)]
  LTE           shift, and go to state 239
  LTE           [reduce using rule 258 (binary_expression)]
  LT            shift, and go to state 236
  LT            [reduce using rule 258 (binary_expression)]
  GT            shift, and go to state 237
  GT            [reduce using rule 258 (binary_expression)]
  PLUS          shift, and go to state 240
  PLUS          [reduce using rule 258 (binary_expression)]
  MINUS         shift, and go to state 241
  MINUS         [reduce using rule 258 (binary_expression)]
  STAR          shift, and go to state 243
  STAR          [reduce using rule 258 (binary_expression)]
  SLASH         shift, and go to state 244
  SLASH         [reduce using rule 258 (binary_expression)]
  DIV           shift, and go to state 245
  DIV           [reduce using rule 258 (binary_expression)]
  AND           shift, and go to state 247
  AND           [reduce using rule 258 (binary_expression)]
  OR            shift, and go to state 242
  OR            [reduce using rule 258 (binary_expression)]
  MOD           shift, and go to state 246
  MOD           [reduce using rule 258 (binary_expression)]
  $default      reduce using rule 258 (binary_expression)

  operator      go to state 233

state 352

 284) paren_expr : LPAREN expression RPAREN _

  $default      reduce using rule 284 (paren_expr)


state 353

 328) operation : OPERATION LBRACK var_or_indirect _ RBRACK
 329) operation : OPERATION LBRACK var_or_indirect _ COMMA var_or_indirect RBRACK

  COMMA         shift, and go to state 418
  RBRACK        shift, and go to state 417


state 354

 330) operation : OPERATION LBRACK signed_number _ RBRACK

  RBRACK        shift, and go to state 419


state 355

 331) operation : OPERATION LBRACK number _ RBRACK

  RBRACK        shift, and go to state 420


state 356

 316) reg : reg_types LBRACK _ definable_range RBRACK

  DIGIT         shift, and go to state 421

  definable_range  go to state 422

state 357

 319) framereg : frametype LBRACK _ DIGIT RBRACK

  DIGIT         shift, and go to state 423


state 358

 323) localvars : local_types LBRACK _ RBRACK

  RBRACK        shift, and go to state 424


state 359

 327) sharedvars : shared_types LBRACK _ RBRACK

  RBRACK        shift, and go to state 425


state 360

  71) group_statement : GROUP _ LPAREN integer RPAREN

  LPAREN        shift, and go to state 426


state 361

 233) coord_system : SPHERE _

  $default      reduce using rule 233 (coord_system)


state 362

 234) coord_system : POLAR _

  $default      reduce using rule 234 (coord_system)


state 363

 235) coord_system : ORIGIN _

  $default      reduce using rule 235 (coord_system)


state 364

 236) var_method_modifier : DOT swallow_newlines WORD _

  $default      reduce using rule 236 (var_method_modifier)


state 365

 237) var_method_modifier : DOT swallow_newlines group_statement _

  $default      reduce using rule 237 (var_method_modifier)


state 366

 238) var_method_modifier : DOT swallow_newlines POSEATTR _

  $default      reduce using rule 238 (var_method_modifier)


state 367

 239) var_method_modifier : DOT swallow_newlines OFFSET _

  $default      reduce using rule 239 (var_method_modifier)


state 368

 240) var_method_modifier : DOT swallow_newlines coord_system _

  $default      reduce using rule 240 (var_method_modifier)


state 369

 241) var_method_modifier : DOT swallow_newlines FIX _

  $default      reduce using rule 241 (var_method_modifier)


state 370

  79) basic_program_call : function_call LPAREN args RPAREN _

  $default      reduce using rule 79 (basic_program_call)


state 371

  84) args : args COMMA _ arg

  STRING        shift, and go to state 254
  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 134
  BANG          shift, and go to state 139
  MINUS         shift, and go to state 154
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 150
  ON_OFF        shift, and go to state 151
  LPAREN        shift, and go to state 152
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 155

  namespaces    go to state 56
  function_call  go to state 57
  arg           go to state 427
  number        go to state 292
  signed_number  go to state 293
  var           go to state 294
  string        go to state 295
  address       go to state 296
  expression    go to state 297
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 135
  binary_expression  go to state 136
  factor        go to state 137
  basic_program_call  go to state 140
  operation     go to state 143
  signed_var    go to state 145
  var_system    go to state 146
  indirect_thing  go to state 147
  paren_expr    go to state 148
  booleans      go to state 149
  sign          go to state 153
  integer       go to state 127

state 372

  81) program_call : RUN function_call LPAREN args _ RPAREN
  84) args : args _ COMMA arg

  RPAREN        shift, and go to state 428
  COMMA         shift, and go to state 371


state 373

  82) program_call : CALL var_or_indirect LPAREN args _ RPAREN
  84) args : args _ COMMA arg

  RPAREN        shift, and go to state 429
  COMMA         shift, and go to state 371


state 374

  96) return_statement : RETURN LPAREN expression RPAREN _

  $default      reduce using rule 96 (return_statement)


state 375

 100) io_method : IO_METHOD LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 100 (io_method)


state 376

 101) io_method : IO_METHOD LPAREN var_or_indirect COMMA _ number COMMA STRING RPAREN

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129

  number        go to state 430
  integer       go to state 127

state 377

   4) statements : statements _ statement terminator
   5) block : NEWLINE statements _

  COMMENT       shift, and go to state 97
  MESSAGE       shift, and go to state 98
  WARNING       shift, and go to state 99
  JUMP          shift, and go to state 65
  IO_METHOD     shift, and go to state 62
  MOVE          shift, and go to state 82
  NEWLINE       shift, and go to state 41
  WORD          shift, and go to state 55
  IF            shift, and go to state 66
  UNLESS        shift, and go to state 67
  FOR           shift, and go to state 68
  WHILE         shift, and go to state 69
  WAIT_FOR      shift, and go to state 47
  WAIT_UNTIL    shift, and go to state 48
  FANUC_USE     shift, and go to state 52
  COLL_GUARD    shift, and go to state 53
  SET_SKIP_CONDITION  shift, and go to state 54
  NAMESPACE     shift, and go to state 73
  CASE          shift, and go to state 76
  INDIRECT      shift, and go to state 95
  EVAL          shift, and go to state 46
  TIMER_METHOD  shift, and go to state 45
  RAISE         shift, and go to state 44
  ABORT         shift, and go to state 31
  RETURN        shift, and go to state 61
  POSITION_DATA  shift, and go to state 100
  CALL          shift, and go to state 60
  RUN           shift, and go to state 59
  PAUSE         shift, and go to state 30
  TP_HEADER     shift, and go to state 42
  TP_APPLICATION_TYPE  shift, and go to state 43
  LPAREN        shift, and go to state 89
  LABEL         shift, and go to state 49
  LABEL_SET     shift, and go to state 50
  LABEL_POP     shift, and go to state 51
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  LPOS          shift, and go to state 39
  JPOS          shift, and go to state 40
  FUNCTION      shift, and go to state 75
  USING         shift, and go to state 70
  IMPORT        shift, and go to state 72
  COMPILE       shift, and go to state 71
  INLINE        shift, and go to state 74
  DEFAULTPOS    shift, and go to state 88
  LOCALSTACK    shift, and go to state 84
  SHAREDSTACK   shift, and go to state 85
  $default      reduce using rule 5 (block)

  statement     go to state 102
  comment       go to state 4
  message       go to state 5
  definition    go to state 6
  namespace     go to state 7
  motion_statement  go to state 8
  position_assignment  go to state 9
  label_definition  go to state 10
  address       go to state 11
  conditional   go to state 12
  inline_conditional  go to state 13
  conditional_block  go to state 14
  forloop       go to state 15
  while_loop    go to state 16
  use_statement  go to state 17
  set_skip_statement  go to state 18
  wait_statement  go to state 19
  case_statement  go to state 20
  fanuc_eval    go to state 21
  timer_method  go to state 22
  position_data  go to state 23
  raise         go to state 24
  tp_header_definition  go to state 25
  lpos_or_jpos  go to state 26
  empty_stmt    go to state 27
  warning       go to state 28
  var_system    go to state 29
  return_statement  go to state 32
  collguard_statement  go to state 33
  function      go to state 34
  tp_application_definition  go to state 35
  using_statement  go to state 36
  import_statement  go to state 37
  compile_statement  go to state 38
  namespaces    go to state 56
  function_call  go to state 57
  basic_program_call  go to state 58
  var           go to state 63
  indirect_thing  go to state 64
  inlineable    go to state 77
  jump          go to state 78
  assignment    go to state 79
  io_method     go to state 80
  program_call  go to state 81
  label         go to state 83
  memory_types  go to state 86
  var_or_indirect  go to state 87
  assignable_range  go to state 90
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94

state 378

 107) conditional : IF expression block elsif_conditions _ else_block END
 111) elsif_conditions : elsif_conditions _ elsif_condition

  ELSE          shift, and go to state 383
  ELSIF         shift, and go to state 380
  $default      reduce using rule 154 (else_block)

  else_block    go to state 431
  elsif_condition  go to state 432

state 379

 110) elsif_conditions : elsif_condition _

  $default      reduce using rule 110 (elsif_conditions)


state 380

 113) elsif_condition : ELSIF _ expression block

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 134
  BANG          shift, and go to state 139
  MINUS         shift, and go to state 154
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 150
  ON_OFF        shift, and go to state 151
  LPAREN        shift, and go to state 152
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 155

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 433
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 135
  binary_expression  go to state 136
  factor        go to state 137
  address       go to state 138
  basic_program_call  go to state 140
  number        go to state 141
  signed_number  go to state 142
  operation     go to state 143
  var           go to state 144
  signed_var    go to state 145
  var_system    go to state 146
  indirect_thing  go to state 147
  paren_expr    go to state 148
  booleans      go to state 149
  sign          go to state 153
  integer       go to state 127

state 381

 109) conditional_block : IF expression THEN block _ elsif_block else_block END

  ELSIF         shift, and go to state 436
  ELSIF         [reduce using rule 116 (elsif_block)]
  $default      reduce using rule 116 (elsif_block)

  elsif_block   go to state 434
  elsif_block_condition  go to state 435

state 382

 108) conditional : UNLESS expression block else_block _ END

  END           shift, and go to state 437


state 383

 153) else_block : ELSE _ block

  NEWLINE       shift, and go to state 304

  block         go to state 438

state 384

 118) forloop : FOR int_or_var IN LPAREN _ int_or_var TO int_or_var RPAREN block END
 119) forloop : FOR int_or_var IN LPAREN _ int_or_var DOWNTO int_or_var RPAREN block END

  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95

  int_or_var    go to state 439
  integer       go to state 178
  var           go to state 179
  indirect_thing  go to state 180
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 385

 120) while_loop : WHILE expression block END _

  $default      reduce using rule 120 (while_loop)


state 386

 131) namespace : NAMESPACE WORD block END _

  $default      reduce using rule 131 (namespace)


state 387

 132) function : INLINE FUNCTION WORD LPAREN _ program_vars RPAREN block END
 133) function : INLINE FUNCTION WORD LPAREN _ program_vars RPAREN COLON WORD block END

  WORD          shift, and go to state 390
  $default      reduce using rule 94 (program_vars)

  program_var   go to state 388
  program_vars  go to state 440

state 388

  92) program_vars : program_var _

  $default      reduce using rule 92 (program_vars)


state 389

  93) program_vars : program_vars _ COMMA program_var
 134) function : FUNCTION WORD LPAREN program_vars _ RPAREN block END
 135) function : FUNCTION WORD LPAREN program_vars _ RPAREN COLON WORD block END

  RPAREN        shift, and go to state 442
  COMMA         shift, and go to state 441


state 390

  95) program_var : WORD _

  $default      reduce using rule 95 (program_var)


state 391

 136) case_statement : CASE var swallow_newlines case_conditions _ case_else END
 138) case_conditions : case_conditions _ case_condition

  ELSE          shift, and go to state 445
  WHEN          shift, and go to state 393
  $default      reduce using rule 143 (case_else)

  case_else     go to state 443
  case_condition  go to state 444

state 392

 137) case_conditions : case_condition _

  $default      reduce using rule 137 (case_conditions)


state 393

 139) case_condition : WHEN _ case_allowed_condition block

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 114

  case_allowed_condition  go to state 446
  number        go to state 230
  var           go to state 231
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  integer       go to state 127

state 394

 155) motion_statement : MOVE DOT swallow_newlines TO _ LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 447


state 395

 156) motion_statement : MOVE DOT swallow_newlines MID _ LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 448


state 396

 212) assignment : var_or_indirect PLUS EQUAL expression _
 258) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 234
  NOTEQUAL      shift, and go to state 235
  GTE           shift, and go to state 238
  LTE           shift, and go to state 239
  LT            shift, and go to state 236
  GT            shift, and go to state 237
  PLUS          shift, and go to state 240
  MINUS         shift, and go to state 241
  STAR          shift, and go to state 243
  SLASH         shift, and go to state 244
  DIV           shift, and go to state 245
  AND           shift, and go to state 247
  OR            shift, and go to state 242
  MOD           shift, and go to state 246
  $default      reduce using rule 212 (assignment)

  operator      go to state 233

state 397

 213) assignment : var_or_indirect MINUS EQUAL expression _
 258) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 234
  NOTEQUAL      shift, and go to state 235
  GTE           shift, and go to state 238
  LTE           shift, and go to state 239
  LT            shift, and go to state 236
  GT            shift, and go to state 237
  PLUS          shift, and go to state 240
  MINUS         shift, and go to state 241
  STAR          shift, and go to state 243
  SLASH         shift, and go to state 244
  DIV           shift, and go to state 245
  AND           shift, and go to state 247
  OR            shift, and go to state 242
  MOD           shift, and go to state 246
  $default      reduce using rule 213 (assignment)

  operator      go to state 233

state 398

 214) assignment : var_or_indirect STAR EQUAL expression _
 258) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 234
  NOTEQUAL      shift, and go to state 235
  GTE           shift, and go to state 238
  LTE           shift, and go to state 239
  LT            shift, and go to state 236
  GT            shift, and go to state 237
  PLUS          shift, and go to state 240
  MINUS         shift, and go to state 241
  STAR          shift, and go to state 243
  SLASH         shift, and go to state 244
  DIV           shift, and go to state 245
  AND           shift, and go to state 247
  OR            shift, and go to state 242
  MOD           shift, and go to state 246
  $default      reduce using rule 214 (assignment)

  operator      go to state 233

state 399

 215) assignment : var_or_indirect SLASH EQUAL expression _
 258) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 234
  NOTEQUAL      shift, and go to state 235
  GTE           shift, and go to state 238
  LTE           shift, and go to state 239
  LT            shift, and go to state 236
  GT            shift, and go to state 237
  PLUS          shift, and go to state 240
  MINUS         shift, and go to state 241
  STAR          shift, and go to state 243
  SLASH         shift, and go to state 244
  DIV           shift, and go to state 245
  AND           shift, and go to state 247
  OR            shift, and go to state 242
  MOD           shift, and go to state 246
  $default      reduce using rule 215 (assignment)

  operator      go to state 233

state 400

 358) array : LBRACK sn _ array_values sn RBRACK

  STRING        shift, and go to state 449
  WORD          shift, and go to state 450
  MINUS         shift, and go to state 154
  TRUE_FALSE    shift, and go to state 454
  LBRACK        shift, and go to state 327
  LBRACE        shift, and go to state 341
  $default      reduce using rule 357 (optional_sign)

  hash          go to state 451
  array         go to state 452
  optional_sign  go to state 453
  sign          go to state 455
  array_values  go to state 456
  array_value   go to state 457
  hash_value    go to state 458

state 401

 216) position_assignment : DEFAULTPOS var_method_modifiers ARROW array _

  $default      reduce using rule 216 (position_assignment)


state 402

 218) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers _ ARROW array
 229) var_method_modifiers : var_method_modifiers _ var_method_modifier

  DOT           shift, and go to state 159
  ARROW         shift, and go to state 459

  var_method_modifier  go to state 287

state 403

 220) position_assignment : assignable_range EQUAL LPAREN assignable_range _ RPAREN pose_range_modifiers

  RPAREN        shift, and go to state 460


state 404

 246) var_system_modifers : var_system_modifers var_system_modifer _

  $default      reduce using rule 246 (var_system_modifers)


state 405

 243) var_system : SYSTEM WORD LBRACK integer _ RBRACK var_system_modifers

  RBRACK        shift, and go to state 461


state 406

 248) var_system_modifer : DOT var_system _

  $default      reduce using rule 248 (var_system_modifer)


state 407

 244) var_system : SYSTEM LBRACK WORD RBRACK _ WORD var_system_modifers

  WORD          shift, and go to state 462


state 408

 285) indirect_thing : INDIRECT LPAREN STRING COMMA _ indirectable RPAREN
 286) indirect_thing : INDIRECT LPAREN STRING COMMA _ indirectable COMMA indirectable RPAREN
 287) indirect_thing : INDIRECT LPAREN STRING COMMA _ indirectable RPAREN var_method_modifiers
 288) indirect_thing : INDIRECT LPAREN STRING COMMA _ indirectable COMMA indirectable RPAREN var_method_modifiers

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 114
  ADDRESS       shift, and go to state 96

  number        go to state 124
  var           go to state 125
  address       go to state 126
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  indirectable  go to state 463
  integer       go to state 127

state 409

 334) message : MESSAGE LPAREN STRING RPAREN _

  $default      reduce using rule 334 (message)


state 410

 335) warning : WARNING LPAREN STRING RPAREN _

  $default      reduce using rule 335 (warning)


state 411

 342) position_data : POSITION_DATA sn hash sn _ END

  END           shift, and go to state 464


state 412

 344) hash : LBRACE sn _ hash_attributes sn RBRACE
 345) hash : LBRACE sn _ RBRACE

  STRING        shift, and go to state 468
  RBRACE        shift, and go to state 466

  hash_attributes  go to state 465
  hash_attribute  go to state 467

state 413

  50) tp_tool_methods : LBRACE sn _ tp_tool_attributes sn RBRACE
  51) tp_tool_methods : LBRACE sn _ RBRACE

  WORD          shift, and go to state 472
  RBRACE        shift, and go to state 470

  tp_tool_attributes  go to state 469
  tp_tool_attribute  go to state 471

state 414

  59) wait_statement : WAIT_FOR LPAREN indirectable COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 473


state 415

  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT _ wait_modifier
  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT _ wait_modifier DOT wait_modifier

  NEWLINE       shift, and go to state 212
  $default      reduce using rule 341 (swallow_newlines)

  wait_modifier  go to state 474
  timeout_modifier  go to state 475
  after_modifier  go to state 476
  swallow_newlines  go to state 477

state 416

  74) use_statement : FANUC_USE LPAREN indirectable COMMA group_statement _ RPAREN

  RPAREN        shift, and go to state 478


state 417

 328) operation : OPERATION LBRACK var_or_indirect RBRACK _

  $default      reduce using rule 328 (operation)


state 418

 329) operation : OPERATION LBRACK var_or_indirect COMMA _ var_or_indirect RBRACK

  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95
  SYSTEM        shift, and go to state 93

  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  var_or_indirect  go to state 479

state 419

 330) operation : OPERATION LBRACK signed_number RBRACK _

  $default      reduce using rule 330 (operation)


state 420

 331) operation : OPERATION LBRACK number RBRACK _

  $default      reduce using rule 331 (operation)


state 421

 304) definable_range : DIGIT _ RANGE DIGIT
 305) definable_range : DIGIT _

  RANGE         shift, and go to state 480
  $default      reduce using rule 305 (definable_range)


state 422

 316) reg : reg_types LBRACK definable_range _ RBRACK

  RBRACK        shift, and go to state 481


state 423

 319) framereg : frametype LBRACK DIGIT _ RBRACK

  RBRACK        shift, and go to state 482


state 424

 323) localvars : local_types LBRACK RBRACK _

  $default      reduce using rule 323 (localvars)


state 425

 327) sharedvars : shared_types LBRACK RBRACK _

  $default      reduce using rule 327 (sharedvars)


state 426

  71) group_statement : GROUP LPAREN _ integer RPAREN

  DIGIT         shift, and go to state 129

  integer       go to state 483

state 427

  84) args : args COMMA arg _

  $default      reduce using rule 84 (args)


state 428

  81) program_call : RUN function_call LPAREN args RPAREN _

  $default      reduce using rule 81 (program_call)


state 429

  82) program_call : CALL var_or_indirect LPAREN args RPAREN _

  $default      reduce using rule 82 (program_call)


state 430

 101) io_method : IO_METHOD LPAREN var_or_indirect COMMA number _ COMMA STRING RPAREN

  COMMA         shift, and go to state 484


state 431

 107) conditional : IF expression block elsif_conditions else_block _ END

  END           shift, and go to state 485


state 432

 111) elsif_conditions : elsif_conditions elsif_condition _

  $default      reduce using rule 111 (elsif_conditions)


state 433

 113) elsif_condition : ELSIF expression _ block
 258) binary_expression : expression _ operator expression

  NEWLINE       shift, and go to state 304
  EEQUAL        shift, and go to state 234
  NOTEQUAL      shift, and go to state 235
  GTE           shift, and go to state 238
  LTE           shift, and go to state 239
  LT            shift, and go to state 236
  GT            shift, and go to state 237
  PLUS          shift, and go to state 240
  MINUS         shift, and go to state 241
  STAR          shift, and go to state 243
  SLASH         shift, and go to state 244
  DIV           shift, and go to state 245
  AND           shift, and go to state 247
  OR            shift, and go to state 242
  MOD           shift, and go to state 246

  block         go to state 486
  operator      go to state 233

state 434

 109) conditional_block : IF expression THEN block elsif_block _ else_block END
 115) elsif_block : elsif_block _ elsif_block_condition

  ELSE          shift, and go to state 383
  ELSIF         shift, and go to state 436
  $default      reduce using rule 154 (else_block)

  else_block    go to state 487
  elsif_block_condition  go to state 488

state 435

 114) elsif_block : elsif_block_condition _

  $default      reduce using rule 114 (elsif_block)


state 436

 117) elsif_block_condition : ELSIF _ expression THEN block

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 134
  BANG          shift, and go to state 139
  MINUS         shift, and go to state 154
  INDIRECT      shift, and go to state 95
  TRUE_FALSE    shift, and go to state 150
  ON_OFF        shift, and go to state 151
  LPAREN        shift, and go to state 152
  SYSTEM        shift, and go to state 93
  ADDRESS       shift, and go to state 96
  OPERATION     shift, and go to state 155

  namespaces    go to state 56
  function_call  go to state 57
  expression    go to state 489
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94
  unary_expression  go to state 135
  binary_expression  go to state 136
  factor        go to state 137
  address       go to state 138
  basic_program_call  go to state 140
  number        go to state 141
  signed_number  go to state 142
  operation     go to state 143
  var           go to state 144
  signed_var    go to state 145
  var_system    go to state 146
  indirect_thing  go to state 147
  paren_expr    go to state 148
  booleans      go to state 149
  sign          go to state 153
  integer       go to state 127

state 437

 108) conditional : UNLESS expression block else_block END _

  $default      reduce using rule 108 (conditional)


state 438

 153) else_block : ELSE block _

  $default      reduce using rule 153 (else_block)


state 439

 118) forloop : FOR int_or_var IN LPAREN int_or_var _ TO int_or_var RPAREN block END
 119) forloop : FOR int_or_var IN LPAREN int_or_var _ DOWNTO int_or_var RPAREN block END

  TO            shift, and go to state 490
  DOWNTO        shift, and go to state 491


state 440

  93) program_vars : program_vars _ COMMA program_var
 132) function : INLINE FUNCTION WORD LPAREN program_vars _ RPAREN block END
 133) function : INLINE FUNCTION WORD LPAREN program_vars _ RPAREN COLON WORD block END

  RPAREN        shift, and go to state 492
  COMMA         shift, and go to state 441


state 441

  93) program_vars : program_vars COMMA _ program_var

  WORD          shift, and go to state 390

  program_var   go to state 493

state 442

 134) function : FUNCTION WORD LPAREN program_vars RPAREN _ block END
 135) function : FUNCTION WORD LPAREN program_vars RPAREN _ COLON WORD block END

  NEWLINE       shift, and go to state 304
  COLON         shift, and go to state 495

  block         go to state 494

state 443

 136) case_statement : CASE var swallow_newlines case_conditions case_else _ END

  END           shift, and go to state 496


state 444

 138) case_conditions : case_conditions case_condition _

  $default      reduce using rule 138 (case_conditions)


state 445

 142) case_else : ELSE _ block

  NEWLINE       shift, and go to state 304

  block         go to state 497

state 446

 139) case_condition : WHEN case_allowed_condition _ block

  NEWLINE       shift, and go to state 304

  block         go to state 498

state 447

 155) motion_statement : MOVE DOT swallow_newlines TO LPAREN _ var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95
  SYSTEM        shift, and go to state 93

  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_or_indirect  go to state 499
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 448

 156) motion_statement : MOVE DOT swallow_newlines MID LPAREN _ var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95
  SYSTEM        shift, and go to state 93

  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_or_indirect  go to state 500
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 449

 349) hash_value : STRING _

  $default      reduce using rule 349 (hash_value)


state 450

 350) hash_value : WORD _

  $default      reduce using rule 350 (hash_value)


state 451

 351) hash_value : hash _

  $default      reduce using rule 351 (hash_value)


state 452

 352) hash_value : array _

  $default      reduce using rule 352 (hash_value)


state 453

 353) hash_value : optional_sign _ DIGIT
 354) hash_value : optional_sign _ REAL

  REAL          shift, and go to state 502
  DIGIT         shift, and go to state 501


state 454

 355) hash_value : TRUE_FALSE _

  $default      reduce using rule 355 (hash_value)


state 455

 356) optional_sign : sign _

  $default      reduce using rule 356 (optional_sign)


state 456

 358) array : LBRACK sn array_values _ sn RBRACK
 360) array_values : array_values _ COMMA sn array_value

  NEWLINE       shift, and go to state 212
  COMMA         shift, and go to state 504
  $default      reduce using rule 341 (swallow_newlines)

  swallow_newlines  go to state 214
  sn            go to state 503

state 457

 359) array_values : array_value _

  $default      reduce using rule 359 (array_values)


state 458

 361) array_value : hash_value _

  $default      reduce using rule 361 (array_value)


state 459

 218) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers ARROW _ array

  LBRACK        shift, and go to state 327

  array         go to state 505

state 460

 220) position_assignment : assignable_range EQUAL LPAREN assignable_range RPAREN _ pose_range_modifiers

  DOT           shift, and go to state 508

  pose_range_modifiers  go to state 506
  pose_range_modifier  go to state 507

state 461

 243) var_system : SYSTEM WORD LBRACK integer RBRACK _ var_system_modifers

  DOT           shift, and go to state 335
  DOT           [reduce using rule 247 (var_system_modifers)]
  $default      reduce using rule 247 (var_system_modifers)

  var_system_modifers  go to state 509
  var_system_modifer  go to state 334

state 462

 244) var_system : SYSTEM LBRACK WORD RBRACK WORD _ var_system_modifers

  DOT           shift, and go to state 335
  DOT           [reduce using rule 247 (var_system_modifers)]
  $default      reduce using rule 247 (var_system_modifers)

  var_system_modifers  go to state 510
  var_system_modifer  go to state 334

state 463

 285) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable _ RPAREN
 286) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable _ COMMA indirectable RPAREN
 287) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable _ RPAREN var_method_modifiers
 288) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable _ COMMA indirectable RPAREN var_method_modifiers

  RPAREN        shift, and go to state 511
  COMMA         shift, and go to state 512


state 464

 342) position_data : POSITION_DATA sn hash sn END _

  $default      reduce using rule 342 (position_data)


state 465

 344) hash : LBRACE sn hash_attributes _ sn RBRACE
 347) hash_attributes : hash_attributes _ COMMA sn hash_attribute

  NEWLINE       shift, and go to state 212
  COMMA         shift, and go to state 514
  $default      reduce using rule 341 (swallow_newlines)

  swallow_newlines  go to state 214
  sn            go to state 513

state 466

 345) hash : LBRACE sn RBRACE _

  $default      reduce using rule 345 (hash)


state 467

 346) hash_attributes : hash_attribute _

  $default      reduce using rule 346 (hash_attributes)


state 468

 348) hash_attribute : STRING _ COLON hash_value

  COLON         shift, and go to state 515


state 469

  50) tp_tool_methods : LBRACE sn tp_tool_attributes _ sn RBRACE
  53) tp_tool_attributes : tp_tool_attributes _ COMMA sn tp_tool_attribute

  NEWLINE       shift, and go to state 212
  COMMA         shift, and go to state 517
  $default      reduce using rule 341 (swallow_newlines)

  sn            go to state 516
  swallow_newlines  go to state 214

state 470

  51) tp_tool_methods : LBRACE sn RBRACE _

  $default      reduce using rule 51 (tp_tool_methods)


state 471

  52) tp_tool_attributes : tp_tool_attribute _

  $default      reduce using rule 52 (tp_tool_attributes)


state 472

  54) tp_tool_attribute : WORD _ COLON hash_value

  COLON         shift, and go to state 518


state 473

  59) wait_statement : WAIT_FOR LPAREN indirectable COMMA STRING RPAREN _

  $default      reduce using rule 59 (wait_statement)


state 474

  61) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier _
  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier _ DOT wait_modifier

  DOT           shift, and go to state 519
  $default      reduce using rule 61 (wait_statement)


state 475

  63) wait_modifier : timeout_modifier _

  $default      reduce using rule 63 (wait_modifier)


state 476

  64) wait_modifier : after_modifier _

  $default      reduce using rule 64 (wait_modifier)


state 477

  65) timeout_modifier : swallow_newlines _ TIMEOUT LPAREN label RPAREN
  66) after_modifier : swallow_newlines _ AFTER LPAREN indirectable COMMA STRING RPAREN

  TIMEOUT       shift, and go to state 520
  AFTER         shift, and go to state 521


state 478

  74) use_statement : FANUC_USE LPAREN indirectable COMMA group_statement RPAREN _

  $default      reduce using rule 74 (use_statement)


state 479

 329) operation : OPERATION LBRACK var_or_indirect COMMA var_or_indirect _ RBRACK

  RBRACK        shift, and go to state 522


state 480

 304) definable_range : DIGIT RANGE _ DIGIT

  DIGIT         shift, and go to state 523


state 481

 316) reg : reg_types LBRACK definable_range RBRACK _

  $default      reduce using rule 316 (reg)


state 482

 319) framereg : frametype LBRACK DIGIT RBRACK _

  $default      reduce using rule 319 (framereg)


state 483

  71) group_statement : GROUP LPAREN integer _ RPAREN

  RPAREN        shift, and go to state 524


state 484

 101) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA _ STRING RPAREN

  STRING        shift, and go to state 525


state 485

 107) conditional : IF expression block elsif_conditions else_block END _

  $default      reduce using rule 107 (conditional)


state 486

 113) elsif_condition : ELSIF expression block _

  $default      reduce using rule 113 (elsif_condition)


state 487

 109) conditional_block : IF expression THEN block elsif_block else_block _ END

  END           shift, and go to state 526


state 488

 115) elsif_block : elsif_block elsif_block_condition _

  $default      reduce using rule 115 (elsif_block)


state 489

 117) elsif_block_condition : ELSIF expression _ THEN block
 258) binary_expression : expression _ operator expression

  EEQUAL        shift, and go to state 234
  NOTEQUAL      shift, and go to state 235
  GTE           shift, and go to state 238
  LTE           shift, and go to state 239
  LT            shift, and go to state 236
  GT            shift, and go to state 237
  PLUS          shift, and go to state 240
  MINUS         shift, and go to state 241
  STAR          shift, and go to state 243
  SLASH         shift, and go to state 244
  DIV           shift, and go to state 245
  AND           shift, and go to state 247
  OR            shift, and go to state 242
  MOD           shift, and go to state 246
  THEN          shift, and go to state 527

  operator      go to state 233

state 490

 118) forloop : FOR int_or_var IN LPAREN int_or_var TO _ int_or_var RPAREN block END

  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95

  int_or_var    go to state 528
  integer       go to state 178
  var           go to state 179
  indirect_thing  go to state 180
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 491

 119) forloop : FOR int_or_var IN LPAREN int_or_var DOWNTO _ int_or_var RPAREN block END

  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95

  int_or_var    go to state 529
  integer       go to state 178
  var           go to state 179
  indirect_thing  go to state 180
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 492

 132) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN _ block END
 133) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN _ COLON WORD block END

  NEWLINE       shift, and go to state 304
  COLON         shift, and go to state 531

  block         go to state 530

state 493

  93) program_vars : program_vars COMMA program_var _

  $default      reduce using rule 93 (program_vars)


state 494

 134) function : FUNCTION WORD LPAREN program_vars RPAREN block _ END

  END           shift, and go to state 532


state 495

 135) function : FUNCTION WORD LPAREN program_vars RPAREN COLON _ WORD block END

  WORD          shift, and go to state 533


state 496

 136) case_statement : CASE var swallow_newlines case_conditions case_else END _

  $default      reduce using rule 136 (case_statement)


state 497

 142) case_else : ELSE block _

  $default      reduce using rule 142 (case_else)


state 498

 139) case_condition : WHEN case_allowed_condition block _

  $default      reduce using rule 139 (case_condition)


state 499

 155) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect _ RPAREN motion_modifiers

  RPAREN        shift, and go to state 534


state 500

 156) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect _ RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  RPAREN        shift, and go to state 535


state 501

 353) hash_value : optional_sign DIGIT _

  $default      reduce using rule 353 (hash_value)


state 502

 354) hash_value : optional_sign REAL _

  $default      reduce using rule 354 (hash_value)


state 503

 358) array : LBRACK sn array_values sn _ RBRACK

  RBRACK        shift, and go to state 536


state 504

 360) array_values : array_values COMMA _ sn array_value

  NEWLINE       shift, and go to state 212
  $default      reduce using rule 341 (swallow_newlines)

  swallow_newlines  go to state 214
  sn            go to state 537

state 505

 218) position_assignment : LPAREN assignable_range RPAREN var_method_modifiers ARROW array _

  $default      reduce using rule 218 (position_assignment)


state 506

 220) position_assignment : assignable_range EQUAL LPAREN assignable_range RPAREN pose_range_modifiers _
 231) pose_range_modifiers : pose_range_modifiers _ pose_range_modifier

  DOT           shift, and go to state 508
  $default      reduce using rule 220 (position_assignment)

  pose_range_modifier  go to state 538

state 507

 230) pose_range_modifiers : pose_range_modifier _

  $default      reduce using rule 230 (pose_range_modifiers)


state 508

 232) pose_range_modifier : DOT _ swallow_newlines POSEREVERSE

  NEWLINE       shift, and go to state 212
  $default      reduce using rule 341 (swallow_newlines)

  swallow_newlines  go to state 539

state 509

 243) var_system : SYSTEM WORD LBRACK integer RBRACK var_system_modifers _
 246) var_system_modifers : var_system_modifers _ var_system_modifer

  DOT           shift, and go to state 335
  DOT           [reduce using rule 243 (var_system)]
  $default      reduce using rule 243 (var_system)

  var_system_modifer  go to state 404

state 510

 244) var_system : SYSTEM LBRACK WORD RBRACK WORD var_system_modifers _
 246) var_system_modifers : var_system_modifers _ var_system_modifer

  DOT           shift, and go to state 335
  DOT           [reduce using rule 244 (var_system)]
  $default      reduce using rule 244 (var_system)

  var_system_modifer  go to state 404

state 511

 285) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN _
 287) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN _ var_method_modifiers

  DOT           shift, and go to state 159
  $default      reduce using rule 285 (indirect_thing)

  var_method_modifier  go to state 158
  var_method_modifiers  go to state 540

state 512

 286) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable COMMA _ indirectable RPAREN
 288) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable COMMA _ indirectable RPAREN var_method_modifiers

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 114
  ADDRESS       shift, and go to state 96

  number        go to state 124
  var           go to state 125
  address       go to state 126
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  indirectable  go to state 541
  integer       go to state 127

state 513

 344) hash : LBRACE sn hash_attributes sn _ RBRACE

  RBRACE        shift, and go to state 542


state 514

 347) hash_attributes : hash_attributes COMMA _ sn hash_attribute

  NEWLINE       shift, and go to state 212
  $default      reduce using rule 341 (swallow_newlines)

  swallow_newlines  go to state 214
  sn            go to state 543

state 515

 348) hash_attribute : STRING COLON _ hash_value

  STRING        shift, and go to state 449
  WORD          shift, and go to state 450
  MINUS         shift, and go to state 154
  TRUE_FALSE    shift, and go to state 454
  LBRACK        shift, and go to state 327
  LBRACE        shift, and go to state 341
  $default      reduce using rule 357 (optional_sign)

  hash_value    go to state 544
  hash          go to state 451
  array         go to state 452
  optional_sign  go to state 453
  sign          go to state 455

state 516

  50) tp_tool_methods : LBRACE sn tp_tool_attributes sn _ RBRACE

  RBRACE        shift, and go to state 545


state 517

  53) tp_tool_attributes : tp_tool_attributes COMMA _ sn tp_tool_attribute

  NEWLINE       shift, and go to state 212
  $default      reduce using rule 341 (swallow_newlines)

  sn            go to state 546
  swallow_newlines  go to state 214

state 518

  54) tp_tool_attribute : WORD COLON _ hash_value

  STRING        shift, and go to state 449
  WORD          shift, and go to state 450
  MINUS         shift, and go to state 154
  TRUE_FALSE    shift, and go to state 454
  LBRACK        shift, and go to state 327
  LBRACE        shift, and go to state 341
  $default      reduce using rule 357 (optional_sign)

  hash_value    go to state 547
  hash          go to state 451
  array         go to state 452
  optional_sign  go to state 453
  sign          go to state 455

state 519

  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT _ wait_modifier

  NEWLINE       shift, and go to state 212
  $default      reduce using rule 341 (swallow_newlines)

  wait_modifier  go to state 548
  timeout_modifier  go to state 475
  after_modifier  go to state 476
  swallow_newlines  go to state 477

state 520

  65) timeout_modifier : swallow_newlines TIMEOUT _ LPAREN label RPAREN

  LPAREN        shift, and go to state 549


state 521

  66) after_modifier : swallow_newlines AFTER _ LPAREN indirectable COMMA STRING RPAREN

  LPAREN        shift, and go to state 550


state 522

 329) operation : OPERATION LBRACK var_or_indirect COMMA var_or_indirect RBRACK _

  $default      reduce using rule 329 (operation)


state 523

 304) definable_range : DIGIT RANGE DIGIT _

  $default      reduce using rule 304 (definable_range)


state 524

  71) group_statement : GROUP LPAREN integer RPAREN _

  $default      reduce using rule 71 (group_statement)


state 525

 101) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 551


state 526

 109) conditional_block : IF expression THEN block elsif_block else_block END _

  $default      reduce using rule 109 (conditional_block)


state 527

 117) elsif_block_condition : ELSIF expression THEN _ block

  NEWLINE       shift, and go to state 304

  block         go to state 552

state 528

 118) forloop : FOR int_or_var IN LPAREN int_or_var TO int_or_var _ RPAREN block END

  RPAREN        shift, and go to state 553


state 529

 119) forloop : FOR int_or_var IN LPAREN int_or_var DOWNTO int_or_var _ RPAREN block END

  RPAREN        shift, and go to state 554


state 530

 132) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN block _ END

  END           shift, and go to state 555


state 531

 133) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON _ WORD block END

  WORD          shift, and go to state 556


state 532

 134) function : FUNCTION WORD LPAREN program_vars RPAREN block END _

  $default      reduce using rule 134 (function)


state 533

 135) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD _ block END

  NEWLINE       shift, and go to state 304

  block         go to state 557

state 534

 155) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN _ motion_modifiers

  DOT           shift, and go to state 560

  motion_modifiers  go to state 558
  motion_modifier  go to state 559

state 535

 156) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN _ DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  DOT           shift, and go to state 561


state 536

 358) array : LBRACK sn array_values sn RBRACK _

  $default      reduce using rule 358 (array)


state 537

 360) array_values : array_values COMMA sn _ array_value

  STRING        shift, and go to state 449
  WORD          shift, and go to state 450
  MINUS         shift, and go to state 154
  TRUE_FALSE    shift, and go to state 454
  LBRACK        shift, and go to state 327
  LBRACE        shift, and go to state 341
  $default      reduce using rule 357 (optional_sign)

  hash          go to state 451
  array         go to state 452
  optional_sign  go to state 453
  sign          go to state 455
  array_value   go to state 562
  hash_value    go to state 458

state 538

 231) pose_range_modifiers : pose_range_modifiers pose_range_modifier _

  $default      reduce using rule 231 (pose_range_modifiers)


state 539

 232) pose_range_modifier : DOT swallow_newlines _ POSEREVERSE

  POSEREVERSE   shift, and go to state 563


state 540

 229) var_method_modifiers : var_method_modifiers _ var_method_modifier
 287) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable RPAREN var_method_modifiers _

  DOT           shift, and go to state 159
  $default      reduce using rule 287 (indirect_thing)

  var_method_modifier  go to state 287

state 541

 286) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable COMMA indirectable _ RPAREN
 288) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable COMMA indirectable _ RPAREN var_method_modifiers

  RPAREN        shift, and go to state 564


state 542

 344) hash : LBRACE sn hash_attributes sn RBRACE _

  $default      reduce using rule 344 (hash)


state 543

 347) hash_attributes : hash_attributes COMMA sn _ hash_attribute

  STRING        shift, and go to state 468

  hash_attribute  go to state 565

state 544

 348) hash_attribute : STRING COLON hash_value _

  $default      reduce using rule 348 (hash_attribute)


state 545

  50) tp_tool_methods : LBRACE sn tp_tool_attributes sn RBRACE _

  $default      reduce using rule 50 (tp_tool_methods)


state 546

  53) tp_tool_attributes : tp_tool_attributes COMMA sn _ tp_tool_attribute

  WORD          shift, and go to state 472

  tp_tool_attribute  go to state 566

state 547

  54) tp_tool_attribute : WORD COLON hash_value _

  $default      reduce using rule 54 (tp_tool_attribute)


state 548

  62) wait_statement : WAIT_UNTIL LPAREN expression RPAREN DOT wait_modifier DOT wait_modifier _

  $default      reduce using rule 62 (wait_statement)


state 549

  65) timeout_modifier : swallow_newlines TIMEOUT LPAREN _ label RPAREN

  LABEL         shift, and go to state 49
  LABEL_SET     shift, and go to state 50
  LABEL_POP     shift, and go to state 51

  label         go to state 567

state 550

  66) after_modifier : swallow_newlines AFTER LPAREN _ indirectable COMMA STRING RPAREN

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 114
  ADDRESS       shift, and go to state 96

  indirectable  go to state 568
  number        go to state 124
  var           go to state 125
  address       go to state 126
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  integer       go to state 127

state 551

 101) io_method : IO_METHOD LPAREN var_or_indirect COMMA number COMMA STRING RPAREN _

  $default      reduce using rule 101 (io_method)


state 552

 117) elsif_block_condition : ELSIF expression THEN block _

  $default      reduce using rule 117 (elsif_block_condition)


state 553

 118) forloop : FOR int_or_var IN LPAREN int_or_var TO int_or_var RPAREN _ block END

  NEWLINE       shift, and go to state 304

  block         go to state 569

state 554

 119) forloop : FOR int_or_var IN LPAREN int_or_var DOWNTO int_or_var RPAREN _ block END

  NEWLINE       shift, and go to state 304

  block         go to state 570

state 555

 132) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN block END _

  $default      reduce using rule 132 (function)


state 556

 133) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD _ block END

  NEWLINE       shift, and go to state 304

  block         go to state 571

state 557

 135) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block _ END

  END           shift, and go to state 572


state 558

 155) motion_statement : MOVE DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers _
 158) motion_modifiers : motion_modifiers _ motion_modifier

  DOT           shift, and go to state 560
  $default      reduce using rule 155 (motion_statement)

  motion_modifier  go to state 573

state 559

 157) motion_modifiers : motion_modifier _

  $default      reduce using rule 157 (motion_modifiers)


state 560

 161) motion_modifier : DOT _ swallow_newlines AT LPAREN speed RPAREN
 162) motion_modifier : DOT _ swallow_newlines ACC LPAREN int_or_var RPAREN
 163) motion_modifier : DOT _ swallow_newlines CR LPAREN motion_arguements RPAREN
 164) motion_modifier : DOT _ swallow_newlines TERM LPAREN valid_terminations RPAREN
 165) motion_modifier : DOT _ swallow_newlines OFFSET LPAREN var_or_indirect RPAREN
 166) motion_modifier : DOT _ swallow_newlines TIME_SEGMENT LPAREN time COMMA seg_actions RPAREN
 167) motion_modifier : DOT _ swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA seg_actions RPAREN
 168) motion_modifier : DOT _ swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN
 169) motion_modifier : DOT _ swallow_newlines valid_motion_statements
 170) motion_modifier : DOT _ swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN

  NEWLINE       shift, and go to state 212
  $default      reduce using rule 341 (swallow_newlines)

  swallow_newlines  go to state 574

state 561

 156) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT _ swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers

  NEWLINE       shift, and go to state 212
  $default      reduce using rule 341 (swallow_newlines)

  swallow_newlines  go to state 575

state 562

 360) array_values : array_values COMMA sn array_value _

  $default      reduce using rule 360 (array_values)


state 563

 232) pose_range_modifier : DOT swallow_newlines POSEREVERSE _

  $default      reduce using rule 232 (pose_range_modifier)


state 564

 286) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable COMMA indirectable RPAREN _
 288) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable COMMA indirectable RPAREN _ var_method_modifiers

  DOT           shift, and go to state 159
  $default      reduce using rule 286 (indirect_thing)

  var_method_modifier  go to state 158
  var_method_modifiers  go to state 576

state 565

 347) hash_attributes : hash_attributes COMMA sn hash_attribute _

  $default      reduce using rule 347 (hash_attributes)


state 566

  53) tp_tool_attributes : tp_tool_attributes COMMA sn tp_tool_attribute _

  $default      reduce using rule 53 (tp_tool_attributes)


state 567

  65) timeout_modifier : swallow_newlines TIMEOUT LPAREN label _ RPAREN

  RPAREN        shift, and go to state 577


state 568

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable _ COMMA STRING RPAREN

  COMMA         shift, and go to state 578


state 569

 118) forloop : FOR int_or_var IN LPAREN int_or_var TO int_or_var RPAREN block _ END

  END           shift, and go to state 579


state 570

 119) forloop : FOR int_or_var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block _ END

  END           shift, and go to state 580


state 571

 133) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block _ END

  END           shift, and go to state 581


state 572

 135) function : FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END _

  $default      reduce using rule 135 (function)


state 573

 158) motion_modifiers : motion_modifiers motion_modifier _

  $default      reduce using rule 158 (motion_modifiers)


state 574

 161) motion_modifier : DOT swallow_newlines _ AT LPAREN speed RPAREN
 162) motion_modifier : DOT swallow_newlines _ ACC LPAREN int_or_var RPAREN
 163) motion_modifier : DOT swallow_newlines _ CR LPAREN motion_arguements RPAREN
 164) motion_modifier : DOT swallow_newlines _ TERM LPAREN valid_terminations RPAREN
 165) motion_modifier : DOT swallow_newlines _ OFFSET LPAREN var_or_indirect RPAREN
 166) motion_modifier : DOT swallow_newlines _ TIME_SEGMENT LPAREN time COMMA seg_actions RPAREN
 167) motion_modifier : DOT swallow_newlines _ DISTANCE_SEGMENT LPAREN distance COMMA seg_actions RPAREN
 168) motion_modifier : DOT swallow_newlines _ SKIP LPAREN label optional_lpos_arg RPAREN
 169) motion_modifier : DOT swallow_newlines _ valid_motion_statements
 170) motion_modifier : DOT swallow_newlines _ single_argument_motion_modifiers LPAREN int_or_var RPAREN

  TIME_SEGMENT  shift, and go to state 587
  DISTANCE_SEGMENT  shift, and go to state 588
  AT            shift, and go to state 582
  ACC           shift, and go to state 583
  TERM          shift, and go to state 585
  OFFSET        shift, and go to state 586
  SKIP          shift, and go to state 589
  COORD         shift, and go to state 592
  MROT          shift, and go to state 593
  PTH           shift, and go to state 594
  WJNT          shift, and go to state 596
  INC           shift, and go to state 595
  BREAK         shift, and go to state 597
  RTCP          shift, and go to state 598
  FPLIN         shift, and go to state 599
  AP_LD         shift, and go to state 604
  RT_LD         shift, and go to state 603
  CD            shift, and go to state 600
  CR            shift, and go to state 584
  INDEV         shift, and go to state 602
  EV            shift, and go to state 601
  PSPD          shift, and go to state 605
  CTV           shift, and go to state 606

  valid_motion_statements  go to state 590
  single_argument_motion_modifiers  go to state 591

state 575

 156) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines _ TO LPAREN var_or_indirect RPAREN motion_modifiers

  TO            shift, and go to state 607


state 576

 229) var_method_modifiers : var_method_modifiers _ var_method_modifier
 288) indirect_thing : INDIRECT LPAREN STRING COMMA indirectable COMMA indirectable RPAREN var_method_modifiers _

  DOT           shift, and go to state 159
  $default      reduce using rule 288 (indirect_thing)

  var_method_modifier  go to state 287

state 577

  65) timeout_modifier : swallow_newlines TIMEOUT LPAREN label RPAREN _

  $default      reduce using rule 65 (timeout_modifier)


state 578

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA _ STRING RPAREN

  STRING        shift, and go to state 608


state 579

 118) forloop : FOR int_or_var IN LPAREN int_or_var TO int_or_var RPAREN block END _

  $default      reduce using rule 118 (forloop)


state 580

 119) forloop : FOR int_or_var IN LPAREN int_or_var DOWNTO int_or_var RPAREN block END _

  $default      reduce using rule 119 (forloop)


state 581

 133) function : INLINE FUNCTION WORD LPAREN program_vars RPAREN COLON WORD block END _

  $default      reduce using rule 133 (function)


state 582

 161) motion_modifier : DOT swallow_newlines AT _ LPAREN speed RPAREN

  LPAREN        shift, and go to state 609


state 583

 162) motion_modifier : DOT swallow_newlines ACC _ LPAREN int_or_var RPAREN

  LPAREN        shift, and go to state 610


state 584

 163) motion_modifier : DOT swallow_newlines CR _ LPAREN motion_arguements RPAREN

  LPAREN        shift, and go to state 611


state 585

 164) motion_modifier : DOT swallow_newlines TERM _ LPAREN valid_terminations RPAREN

  LPAREN        shift, and go to state 612


state 586

 165) motion_modifier : DOT swallow_newlines OFFSET _ LPAREN var_or_indirect RPAREN

  LPAREN        shift, and go to state 613


state 587

 166) motion_modifier : DOT swallow_newlines TIME_SEGMENT _ LPAREN time COMMA seg_actions RPAREN

  LPAREN        shift, and go to state 614


state 588

 167) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT _ LPAREN distance COMMA seg_actions RPAREN

  LPAREN        shift, and go to state 615


state 589

 168) motion_modifier : DOT swallow_newlines SKIP _ LPAREN label optional_lpos_arg RPAREN

  LPAREN        shift, and go to state 616


state 590

 169) motion_modifier : DOT swallow_newlines valid_motion_statements _

  $default      reduce using rule 169 (motion_modifier)


state 591

 170) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers _ LPAREN int_or_var RPAREN

  LPAREN        shift, and go to state 617


state 592

 171) valid_motion_statements : COORD _

  $default      reduce using rule 171 (valid_motion_statements)


state 593

 172) valid_motion_statements : MROT _

  $default      reduce using rule 172 (valid_motion_statements)


state 594

 173) valid_motion_statements : PTH _

  $default      reduce using rule 173 (valid_motion_statements)


state 595

 174) valid_motion_statements : INC _

  $default      reduce using rule 174 (valid_motion_statements)


state 596

 175) valid_motion_statements : WJNT _

  $default      reduce using rule 175 (valid_motion_statements)


state 597

 176) valid_motion_statements : BREAK _

  $default      reduce using rule 176 (valid_motion_statements)


state 598

 177) valid_motion_statements : RTCP _

  $default      reduce using rule 177 (valid_motion_statements)


state 599

 178) valid_motion_statements : FPLIN _

  $default      reduce using rule 178 (valid_motion_statements)


state 600

 179) single_argument_motion_modifiers : CD _

  $default      reduce using rule 179 (single_argument_motion_modifiers)


state 601

 180) single_argument_motion_modifiers : EV _

  $default      reduce using rule 180 (single_argument_motion_modifiers)


state 602

 181) single_argument_motion_modifiers : INDEV _

  $default      reduce using rule 181 (single_argument_motion_modifiers)


state 603

 182) single_argument_motion_modifiers : RT_LD _

  $default      reduce using rule 182 (single_argument_motion_modifiers)


state 604

 183) single_argument_motion_modifiers : AP_LD _

  $default      reduce using rule 183 (single_argument_motion_modifiers)


state 605

 184) single_argument_motion_modifiers : PSPD _

  $default      reduce using rule 184 (single_argument_motion_modifiers)


state 606

 185) single_argument_motion_modifiers : CTV _

  $default      reduce using rule 185 (single_argument_motion_modifiers)


state 607

 156) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO _ LPAREN var_or_indirect RPAREN motion_modifiers

  LPAREN        shift, and go to state 618


state 608

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA STRING _ RPAREN

  RPAREN        shift, and go to state 619


state 609

 161) motion_modifier : DOT swallow_newlines AT LPAREN _ speed RPAREN

  STRING        shift, and go to state 622
  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 114
  ADDRESS       shift, and go to state 96

  speed         go to state 620
  number        go to state 124
  var           go to state 125
  address       go to state 126
  indirectable  go to state 621
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  integer       go to state 127

state 610

 162) motion_modifier : DOT swallow_newlines ACC LPAREN _ int_or_var RPAREN

  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95

  integer       go to state 178
  var           go to state 179
  indirect_thing  go to state 180
  int_or_var    go to state 623
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 611

 163) motion_modifier : DOT swallow_newlines CR LPAREN _ motion_arguements RPAREN

  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 114
  MINUS         shift, and go to state 628

  valid_terminations  go to state 624
  motion_arguements  go to state 625
  integer       go to state 626
  var           go to state 627
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 612

 164) motion_modifier : DOT swallow_newlines TERM LPAREN _ valid_terminations RPAREN

  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 114
  MINUS         shift, and go to state 628

  valid_terminations  go to state 629
  integer       go to state 626
  var           go to state 627
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 613

 165) motion_modifier : DOT swallow_newlines OFFSET LPAREN _ var_or_indirect RPAREN

  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95
  SYSTEM        shift, and go to state 93

  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_or_indirect  go to state 630
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 614

 166) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN _ time COMMA seg_actions RPAREN

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 114

  time          go to state 631
  var           go to state 632
  number        go to state 633
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  integer       go to state 127

state 615

 167) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN _ distance COMMA seg_actions RPAREN

  REAL          shift, and go to state 128
  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 114

  distance      go to state 634
  var           go to state 635
  number        go to state 636
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94
  integer       go to state 127

state 616

 168) motion_modifier : DOT swallow_newlines SKIP LPAREN _ label optional_lpos_arg RPAREN

  LABEL         shift, and go to state 49
  LABEL_SET     shift, and go to state 50
  LABEL_POP     shift, and go to state 51

  label         go to state 637

state 617

 170) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN _ int_or_var RPAREN

  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95

  integer       go to state 178
  var           go to state 179
  indirect_thing  go to state 180
  int_or_var    go to state 638
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 618

 156) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN _ var_or_indirect RPAREN motion_modifiers

  WORD          shift, and go to state 114
  INDIRECT      shift, and go to state 95
  SYSTEM        shift, and go to state 93

  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  var_or_indirect  go to state 639
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 619

  66) after_modifier : swallow_newlines AFTER LPAREN indirectable COMMA STRING RPAREN _

  $default      reduce using rule 66 (after_modifier)


state 620

 161) motion_modifier : DOT swallow_newlines AT LPAREN speed _ RPAREN

  RPAREN        shift, and go to state 640


state 621

 204) speed : indirectable _ COMMA STRING

  COMMA         shift, and go to state 641


state 622

 205) speed : STRING _

  $default      reduce using rule 205 (speed)


state 623

 162) motion_modifier : DOT swallow_newlines ACC LPAREN int_or_var _ RPAREN

  RPAREN        shift, and go to state 642


state 624

 159) motion_arguements : valid_terminations _
 160) motion_arguements : valid_terminations _ COMMA valid_terminations

  COMMA         shift, and go to state 643
  $default      reduce using rule 159 (motion_arguements)


state 625

 163) motion_modifier : DOT swallow_newlines CR LPAREN motion_arguements _ RPAREN

  RPAREN        shift, and go to state 644


state 626

 186) valid_terminations : integer _

  $default      reduce using rule 186 (valid_terminations)


state 627

 187) valid_terminations : var _

  $default      reduce using rule 187 (valid_terminations)


state 628

 188) valid_terminations : MINUS _ DIGIT

  DIGIT         shift, and go to state 645


state 629

 164) motion_modifier : DOT swallow_newlines TERM LPAREN valid_terminations _ RPAREN

  RPAREN        shift, and go to state 646


state 630

 165) motion_modifier : DOT swallow_newlines OFFSET LPAREN var_or_indirect _ RPAREN

  RPAREN        shift, and go to state 647


state 631

 166) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time _ COMMA seg_actions RPAREN

  COMMA         shift, and go to state 648


state 632

 200) time : var _

  $default      reduce using rule 200 (time)


state 633

 201) time : number _

  $default      reduce using rule 201 (time)


state 634

 167) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance _ COMMA seg_actions RPAREN

  COMMA         shift, and go to state 649


state 635

 202) distance : var _

  $default      reduce using rule 202 (distance)


state 636

 203) distance : number _

  $default      reduce using rule 203 (distance)


state 637

 168) motion_modifier : DOT swallow_newlines SKIP LPAREN label _ optional_lpos_arg RPAREN

  COMMA         shift, and go to state 651
  $default      reduce using rule 190 (optional_lpos_arg)

  optional_lpos_arg  go to state 650

state 638

 170) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var _ RPAREN

  RPAREN        shift, and go to state 652


state 639

 156) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect _ RPAREN motion_modifiers

  RPAREN        shift, and go to state 653


state 640

 161) motion_modifier : DOT swallow_newlines AT LPAREN speed RPAREN _

  $default      reduce using rule 161 (motion_modifier)


state 641

 204) speed : indirectable COMMA _ STRING

  STRING        shift, and go to state 654


state 642

 162) motion_modifier : DOT swallow_newlines ACC LPAREN int_or_var RPAREN _

  $default      reduce using rule 162 (motion_modifier)


state 643

 160) motion_arguements : valid_terminations COMMA _ valid_terminations

  DIGIT         shift, and go to state 129
  WORD          shift, and go to state 114
  MINUS         shift, and go to state 628

  valid_terminations  go to state 655
  integer       go to state 626
  var           go to state 627
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 644

 163) motion_modifier : DOT swallow_newlines CR LPAREN motion_arguements RPAREN _

  $default      reduce using rule 163 (motion_modifier)


state 645

 188) valid_terminations : MINUS DIGIT _

  $default      reduce using rule 188 (valid_terminations)


state 646

 164) motion_modifier : DOT swallow_newlines TERM LPAREN valid_terminations RPAREN _

  $default      reduce using rule 164 (motion_modifier)


state 647

 165) motion_modifier : DOT swallow_newlines OFFSET LPAREN var_or_indirect RPAREN _

  $default      reduce using rule 165 (motion_modifier)


state 648

 166) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA _ seg_actions RPAREN

  IO_METHOD     shift, and go to state 62
  WORD          shift, and go to state 134
  INDIRECT      shift, and go to state 95
  CALL          shift, and go to state 60
  RUN           shift, and go to state 59
  SYSTEM        shift, and go to state 93

  namespaces    go to state 56
  function_call  go to state 57
  basic_program_call  go to state 58
  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  seg_actions   go to state 656
  program_call  go to state 657
  io_method     go to state 658
  assignment    go to state 659
  var_or_indirect  go to state 660
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94

state 649

 167) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA _ seg_actions RPAREN

  IO_METHOD     shift, and go to state 62
  WORD          shift, and go to state 134
  INDIRECT      shift, and go to state 95
  CALL          shift, and go to state 60
  RUN           shift, and go to state 59
  SYSTEM        shift, and go to state 93

  namespaces    go to state 56
  function_call  go to state 57
  basic_program_call  go to state 58
  var           go to state 112
  indirect_thing  go to state 64
  var_system    go to state 113
  seg_actions   go to state 661
  program_call  go to state 657
  io_method     go to state 658
  assignment    go to state 659
  var_or_indirect  go to state 660
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  ns            go to state 94

state 650

 168) motion_modifier : DOT swallow_newlines SKIP LPAREN label optional_lpos_arg _ RPAREN

  RPAREN        shift, and go to state 662


state 651

 189) optional_lpos_arg : COMMA _ var

  WORD          shift, and go to state 114

  var           go to state 663
  var_without_namespaces  go to state 91
  var_with_namespaces  go to state 92
  namespaces    go to state 115
  ns            go to state 94

state 652

 170) motion_modifier : DOT swallow_newlines single_argument_motion_modifiers LPAREN int_or_var RPAREN _

  $default      reduce using rule 170 (motion_modifier)


state 653

 156) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN _ motion_modifiers

  DOT           shift, and go to state 560

  motion_modifiers  go to state 664
  motion_modifier  go to state 559

state 654

 204) speed : indirectable COMMA STRING _

  $default      reduce using rule 204 (speed)


state 655

 160) motion_arguements : valid_terminations COMMA valid_terminations _

  $default      reduce using rule 160 (motion_arguements)


state 656

 166) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA seg_actions _ RPAREN

  RPAREN        shift, and go to state 665


state 657

 197) seg_actions : program_call _

  $default      reduce using rule 197 (seg_actions)


state 658

 198) seg_actions : io_method _

  $default      reduce using rule 198 (seg_actions)


state 659

 199) seg_actions : assignment _

  $default      reduce using rule 199 (seg_actions)


state 660

 211) assignment : var_or_indirect _ EQUAL expression
 212) assignment : var_or_indirect _ PLUS EQUAL expression
 213) assignment : var_or_indirect _ MINUS EQUAL expression
 214) assignment : var_or_indirect _ STAR EQUAL expression
 215) assignment : var_or_indirect _ SLASH EQUAL expression

  EQUAL         shift, and go to state 196
  PLUS          shift, and go to state 197
  MINUS         shift, and go to state 198
  STAR          shift, and go to state 199
  SLASH         shift, and go to state 200


state 661

 167) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA seg_actions _ RPAREN

  RPAREN        shift, and go to state 666


state 662

 168) motion_modifier : DOT swallow_newlines SKIP LPAREN label optional_lpos_arg RPAREN _

  $default      reduce using rule 168 (motion_modifier)


state 663

 189) optional_lpos_arg : COMMA var _

  $default      reduce using rule 189 (optional_lpos_arg)


state 664

 156) motion_statement : MOVE DOT swallow_newlines MID LPAREN var_or_indirect RPAREN DOT swallow_newlines TO LPAREN var_or_indirect RPAREN motion_modifiers _
 158) motion_modifiers : motion_modifiers _ motion_modifier

  DOT           shift, and go to state 560
  $default      reduce using rule 156 (motion_statement)

  motion_modifier  go to state 573

state 665

 166) motion_modifier : DOT swallow_newlines TIME_SEGMENT LPAREN time COMMA seg_actions RPAREN _

  $default      reduce using rule 166 (motion_modifier)


state 666

 167) motion_modifier : DOT swallow_newlines DISTANCE_SEGMENT LPAREN distance COMMA seg_actions RPAREN _

  $default      reduce using rule 167 (motion_modifier)

